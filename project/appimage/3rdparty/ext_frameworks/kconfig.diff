diff --git a/autotests/kconfigtest.cpp b/autotests/kconfigtest.cpp
index 2b905b5..8c72d58 100644
--- a/autotests/kconfigtest.cpp
+++ b/autotests/kconfigtest.cpp
@@ -570,7 +570,7 @@ void KConfigTest::testPathQtHome()
     qunsetenv("QT_CACHE_HOME");
     qunsetenv("QT_CONFIG_HOME");
     QVERIFY(group.hasKey("dataDir"));
-    QCOMPARE(group.readEntry("dataDir", QString()), QStandardPaths::writableLocation(QStandardPaths::GenericDataLocation).append(QStringLiteral("/kconfigtest")));
+    QCOMPARE(group.readEntry("dataDir", QString()), QStandardPaths::writableLocation(QStandardPaths::AppDataLocation).append(QStringLiteral("/kconfigtest")));
     QVERIFY(group.hasKey("cacheDir"));
     QCOMPARE(group.readEntry("cacheDir", QString()), QStandardPaths::writableLocation(QStandardPaths::GenericCacheLocation).append(QStringLiteral("/kconfigtest")));
     QVERIFY(group.hasKey("configDir"));
diff --git a/autotests/kdesktopfiletest.cpp b/autotests/kdesktopfiletest.cpp
index 393a6a0..083626d 100644
--- a/autotests/kdesktopfiletest.cpp
+++ b/autotests/kdesktopfiletest.cpp
@@ -201,7 +201,7 @@ void KDesktopFileTest::testIsAuthorizedDesktopFile()
     QVERIFY(QFile::exists(fileName));
     QVERIFY(!KDesktopFile::isAuthorizedDesktopFile(fileName));
 
-    const QString installedFile = QStandardPaths::locate(QStandardPaths::GenericDataLocation, QStringLiteral("/kservices5/http_cache_cleaner.desktop"));
+    const QString installedFile = QStandardPaths::locate(QStandardPaths::AppDataLocation, QStringLiteral("/kservices5/http_cache_cleaner.desktop"));
     if (!installedFile.isEmpty()) {
         QVERIFY(KDesktopFile::isAuthorizedDesktopFile(installedFile));
     } else {
diff --git a/autotests/test_kconf_update.cpp b/autotests/test_kconf_update.cpp
index 4180619..32cd88a 100644
--- a/autotests/test_kconf_update.cpp
+++ b/autotests/test_kconf_update.cpp
@@ -625,7 +625,7 @@ void TestKConfUpdate::testScript()
 
     QSharedPointer<QTemporaryFile> updFile(writeUpdFile(updContent));
 
-    const QString scriptDir = QStandardPaths::writableLocation(QStandardPaths::GenericDataLocation) + "/kconf_update";
+    const QString scriptDir = QStandardPaths::writableLocation(QStandardPaths::AppDataLocation) + "/kconf_update";
     QVERIFY(QDir().mkpath(scriptDir));
     QString scriptPath = scriptDir + "/test.sh";
     writeFile(scriptPath, updScript);
diff --git a/docs/options.md b/docs/options.md
index ba7e2d8..a960a7d 100644
--- a/docs/options.md
+++ b/docs/options.md
@@ -96,4 +96,4 @@ They are:
 
     `$QT_CACHE_HOME` - QStandardPaths::GenericConfigLocation
     `$QT_CONFIG_HOME` - QStandardPaths::GenericConfigLocation
-    `$QT_DATA_HOME` - QStandardPaths::GenericDataLocation
+    `$QT_DATA_HOME` - QStandardPaths::AppDataLocation
diff --git a/src/core/kconfig.cpp b/src/core/kconfig.cpp
index ad52da9..0401ced 100644
--- a/src/core/kconfig.cpp
+++ b/src/core/kconfig.cpp
@@ -228,7 +228,7 @@ QString KConfigPrivate::expandString(const QString &value)
                         env = QString::fromLocal8Bit(pEnv.constData());
                     } else {
                         if (aVarName == QStringLiteral("QT_DATA_HOME")) {
-                            env = QStandardPaths::writableLocation(QStandardPaths::GenericDataLocation);
+                            env = QStandardPaths::writableLocation(QStandardPaths::AppDataLocation);
                         } else if (aVarName == QStringLiteral("QT_CONFIG_HOME")) {
                             env = QStandardPaths::writableLocation(QStandardPaths::GenericConfigLocation);
                         } else if (aVarName == QStringLiteral("QT_CACHE_HOME")) {
diff --git a/src/core/kdesktopfile.cpp b/src/core/kdesktopfile.cpp
index 4a55030..e28e5df 100644
--- a/src/core/kdesktopfile.cpp
+++ b/src/core/kdesktopfile.cpp
@@ -88,7 +88,7 @@ QString KDesktopFile::locateLocal(const QString &path)
         }
     }
     // Relative to xdg data dir? (much more common)
-    Q_FOREACH (const QString &dir, QStandardPaths::standardLocations(QStandardPaths::GenericDataLocation)) {
+    Q_FOREACH (const QString &dir, QStandardPaths::standardLocations(QStandardPaths::AppDataLocation)) {
         if (path.startsWith(dir + plus)) {
             relativePath = dir.mid(path.length() + 1);
         }
@@ -97,7 +97,7 @@ QString KDesktopFile::locateLocal(const QString &path)
         // What now? The desktop file doesn't come from XDG_DATA_DIRS. Use filename only and hope for the best.
         relativePath = path.mid(path.lastIndexOf(QLatin1Char('/')) + 1);
     }
-    return QStandardPaths::writableLocation(QStandardPaths::GenericDataLocation) + QLatin1Char('/') + relativePath;
+    return QStandardPaths::writableLocation(QStandardPaths::AppDataLocation) + QLatin1Char('/') + relativePath;
 }
 
 bool KDesktopFile::isDesktopFile(const QString &path)
@@ -134,7 +134,7 @@ bool KDesktopFile::isAuthorizedDesktopFile(const QString &path)
         }
     }
     const QString servicesDir = QStringLiteral("kservices5/"); // KGlobal::dirs()->xdgDataRelativePath("services")
-    Q_FOREACH (const QString &xdgDataPrefix, QStandardPaths::standardLocations(QStandardPaths::GenericDataLocation)) {
+    Q_FOREACH (const QString &xdgDataPrefix, QStandardPaths::standardLocations(QStandardPaths::AppDataLocation)) {
         if (QDir(xdgDataPrefix).exists()) {
             const QString prefix = QFileInfo(xdgDataPrefix).canonicalFilePath();
             if (realPath.startsWith(prefix + QLatin1Char('/') + servicesDir, sensitivity)) {
diff --git a/src/kconf_update/kconf_update.cpp b/src/kconf_update/kconf_update.cpp
index 2acd720..d89ae3d 100644
--- a/src/kconf_update/kconf_update.cpp
+++ b/src/kconf_update/kconf_update.cpp
@@ -125,7 +125,7 @@ KonfUpdate::KonfUpdate(QCommandLineParser *parser)
     m_bUseConfigInfo = false;
     if (parser->isSet(QStringLiteral("check"))) {
         m_bUseConfigInfo = true;
-        const QString file = QStandardPaths::locate(QStandardPaths::GenericDataLocation, "kconf_update/" + parser->value(QStringLiteral("check")));
+        const QString file = QStandardPaths::locate(QStandardPaths::AppDataLocation, "kconf_update/" + parser->value(QStringLiteral("check")));
         if (file.isEmpty()) {
             qWarning("File '%s' not found.", parser->value(QStringLiteral("check")).toLocal8Bit().data());
             log() << "File '" << parser->value(QStringLiteral("check")) << "' passed on command line not found" << endl;
@@ -177,7 +177,7 @@ KonfUpdate::log()
 {
     if (!m_textStream) {
 #if 0
-        QString dir = QStandardPaths::writableLocation(QStandardPaths::GenericDataLocation) + QLatin1Char('/') + "kconf_update/log";
+        QString dir = QStandardPaths::writableLocation(QStandardPaths::AppDataLocation) + QLatin1Char('/') + "kconf_update/log";
         QDir().mkpath(dir);
         QString file = dir + "/update.log";
         m_file = new QFile(file);
@@ -206,7 +206,7 @@ QStringList KonfUpdate::findUpdateFiles(bool dirtyOnly)
 {
     QStringList result;
 
-    const QStringList dirs = QStandardPaths::locateAll(QStandardPaths::GenericDataLocation, QStringLiteral("kconf_update"), QStandardPaths::LocateDirectory);
+    const QStringList dirs = QStandardPaths::locateAll(QStandardPaths::AppDataLocation, QStringLiteral("kconf_update"), QStandardPaths::LocateDirectory);
     Q_FOREACH (const QString &d, dirs) {
         const QDir dir(d);
 
@@ -760,7 +760,7 @@ void KonfUpdate::gotScript(const QString &_script)
         return;
     }
 
-    QString path = QStandardPaths::locate(QStandardPaths::GenericDataLocation, QStringLiteral("kconf_update/") + script);
+    QString path = QStandardPaths::locate(QStandardPaths::AppDataLocation, QStringLiteral("kconf_update/") + script);
     if (path.isEmpty()) {
         if (interpreter.isEmpty()) {
             path = CMAKE_INSTALL_PREFIX "/" LIB_INSTALL_DIR "/kconf_update_bin/" + script;
