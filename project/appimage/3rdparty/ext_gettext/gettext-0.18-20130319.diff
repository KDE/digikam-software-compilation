diff -Nru -x '*~' gettext-0.18.orig/cmake/Modules/Findiconv.cmake gettext-0.18/cmake/Modules/Findiconv.cmake
--- gettext-0.18.orig/cmake/Modules/Findiconv.cmake	1970-01-01 01:00:00.000000000 +0100
+++ gettext-0.18/cmake/Modules/Findiconv.cmake	2013-03-19 08:59:56.985779000 +0100
@@ -0,0 +1,60 @@
+# - Try to find Iconv 
+# Once done this will define 
+# 
+#  ICONV_FOUND - system has Iconv 
+#  ICONV_INCLUDE_DIR - the Iconv include directory 
+#  ICONV_LIBRARIES - Link these to use Iconv 
+#  ICONV_SECOND_ARGUMENT_IS_CONST - the second argument for iconv() is const
+# 
+include(CheckCXXSourceCompiles)
+
+IF (ICONV_INCLUDE_DIR AND ICONV_LIBRARIES)
+  # Already in cache, be silent
+  SET(ICONV_FIND_QUIETLY TRUE)
+ENDIF (ICONV_INCLUDE_DIR AND ICONV_LIBRARIES)
+
+FIND_PATH(ICONV_INCLUDE_DIR iconv.h) 
+ 
+FIND_LIBRARY(ICONV_LIBRARIES NAMES iconv libiconv libiconv-2 c)
+ 
+IF(ICONV_INCLUDE_DIR AND ICONV_LIBRARIES) 
+   SET(ICONV_FOUND TRUE) 
+ENDIF(ICONV_INCLUDE_DIR AND ICONV_LIBRARIES) 
+
+set(CMAKE_REQUIRED_INCLUDES ${ICONV_INCLUDE_DIR})
+set(CMAKE_REQUIRED_LIBRARIES ${ICONV_LIBRARIES})
+IF(ICONV_FOUND)
+  check_cxx_source_compiles("
+  #include <iconv.h>
+  int main(){
+    iconv_t conv = 0;
+    const char* in = 0;
+    size_t ilen = 0;
+    char* out = 0;
+    size_t olen = 0;
+    iconv(conv, &in, &ilen, &out, &olen);
+    return 0;
+  }
+" ICONV_SECOND_ARGUMENT_IS_CONST )
+  IF(ICONV_SECOND_ARGUMENT_IS_CONST)
+    SET(ICONV_CONST "const")
+  ENDIF(ICONV_SECOND_ARGUMENT_IS_CONST)
+ENDIF(ICONV_FOUND)
+set(CMAKE_REQUIRED_INCLUDES)
+set(CMAKE_REQUIRED_LIBRARIES)
+
+IF(ICONV_FOUND) 
+  IF(NOT ICONV_FIND_QUIETLY) 
+    MESSAGE(STATUS "Found Iconv: ${ICONV_LIBRARIES}") 
+  ENDIF(NOT ICONV_FIND_QUIETLY) 
+ELSE(ICONV_FOUND) 
+  IF(Iconv_FIND_REQUIRED) 
+    MESSAGE(FATAL_ERROR "Could not find Iconv") 
+  ENDIF(Iconv_FIND_REQUIRED) 
+ENDIF(ICONV_FOUND) 
+
+MARK_AS_ADVANCED(
+  ICONV_INCLUDE_DIR
+  ICONV_LIBRARIES
+  ICONV_SECOND_ARGUMENT_IS_CONST
+)
diff -Nru -x '*~' gettext-0.18.orig/cmake/Modules/FindWcecompat.cmake gettext-0.18/cmake/Modules/FindWcecompat.cmake
--- gettext-0.18.orig/cmake/Modules/FindWcecompat.cmake	1970-01-01 01:00:00.000000000 +0100
+++ gettext-0.18/cmake/Modules/FindWcecompat.cmake	2013-03-19 08:59:56.997779700 +0100
@@ -0,0 +1,33 @@
+# Try to find Wcecompat functionality
+# Once done this will define
+#
+#  WCECOMPAT_FOUND - system has Wcecompat
+#  WCECOMPAT_INCLUDE_DIR - Wcecompat include directory
+#  WCECOMPAT_LIBRARIES - Libraries needed to use Wcecompat
+#
+# Copyright (c) 2010, Andreas Holzammer, <andy@kdab.com>
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+
+if(WCECOMPAT_INCLUDE_DIR AND WCECOMPAT_LIB_FOUND)
+  set(Wcecompat_FIND_QUIETLY TRUE)
+endif(WCECOMPAT_INCLUDE_DIR AND WCECOMPAT_LIB_FOUND)
+
+find_path(WCECOMPAT_INCLUDE_DIR errno.h PATH_SUFFIXES wcecompat)
+
+set(WCECOMPAT_LIB_FOUND FALSE)
+
+if(WCECOMPAT_INCLUDE_DIR)
+    find_library(WCECOMPAT_LIBRARIES NAMES wcecompat wcecompatex )
+    if(WCECOMPAT_LIBRARIES)
+      set(WCECOMPAT_LIB_FOUND TRUE)
+    endif(WCECOMPAT_LIBRARIES)
+endif(WCECOMPAT_INCLUDE_DIR)
+
+# I have no idea what this is about, but it seems to be used quite often, so I add this here
+set(WCECOMPAT_CONST const)
+
+include(FindPackageHandleStandardArgs)
+find_package_handle_standard_args(Wcecompat  DEFAULT_MSG  WCECOMPAT_LIBRARIES  WCECOMPAT_LIB_FOUND)
+
+mark_as_advanced(WCECOMPAT_INCLUDE_DIR  WCECOMPAT_LIBRARIES  WCECOMPAT_CONST  WCECOMPAT_LIB_FOUND)
diff -Nru -x '*~' gettext-0.18.orig/cmake/Modules/MacroBoolTo01.cmake gettext-0.18/cmake/Modules/MacroBoolTo01.cmake
--- gettext-0.18.orig/cmake/Modules/MacroBoolTo01.cmake	1970-01-01 01:00:00.000000000 +0100
+++ gettext-0.18/cmake/Modules/MacroBoolTo01.cmake	2013-03-19 08:59:57.000779900 +0100
@@ -0,0 +1,20 @@
+# MACRO_BOOL_TO_01( VAR RESULT0 ... RESULTN )
+# This macro evaluates its first argument
+# and sets all the given vaiables either to 0 or 1
+# depending on the value of the first one
+
+# Copyright (c) 2006, Alexander Neundorf, <neundorf@kde.org>
+#
+# Redistribution and use is allowed according to the terms of the BSD license.
+# For details see the accompanying COPYING-CMAKE-SCRIPTS file.
+
+
+MACRO(MACRO_BOOL_TO_01 FOUND_VAR )
+   FOREACH (_current_VAR ${ARGN})
+      IF(${FOUND_VAR})
+         SET(${_current_VAR} 1)
+      ELSE(${FOUND_VAR})
+         SET(${_current_VAR} 0)
+      ENDIF(${FOUND_VAR})
+   ENDFOREACH(_current_VAR)
+ENDMACRO(MACRO_BOOL_TO_01)
diff -Nru -x '*~' gettext-0.18.orig/CMakeLists.txt gettext-0.18/CMakeLists.txt
--- gettext-0.18.orig/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ gettext-0.18/CMakeLists.txt	2013-03-19 09:08:26.381914800 +0100
@@ -0,0 +1,39 @@
+cmake_minimum_required(VERSION 2.6)
+
+project(gettext)
+
+set(PACKAGE_VERSION_MAJOR 0)
+set(PACKAGE_VERSION_MINOR 18)
+set(PACKAGE_VERSION_SUBMINOR 0)
+
+set(PACKAGE_VERSION_STRING "${PACKAGE_VERSION_MAJOR}.${PACKAGE_VERSION_MINOR}")
+
+add_definitions(-DPACKAGE_VERSION_MAJOR=${PACKAGE_VERSION_MAJOR} -DPACKAGE_VERSION_MINOR=${PACKAGE_VERSION_MINOR} -DPACKAGE_VERSION_SUBMINOR=${PACKAGE_VERSION_SUBMINOR} -DPACKAGE_VERSION_STRING="${PACKAGE_VERSION_STRING}")
+
+set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules ${CMAKE_MODULE_PATH})
+
+include(MacroBoolTo01)
+
+if(WINCE)
+    find_package(Wcecompat REQUIRED)
+    include_directories(${WCECOMPAT_INCLUDE_DIR})
+    set(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES} ${WCECOMPAT_INCLUDE_DIR})
+    set(LIBRARY_TYPE STATIC)
+    add_definitions(-DGETTEXT_STATIC_LIBS)
+    add_definitions(-DWCECOMPAT_USE_DLMALLOC)
+else(WINCE)
+    set(LIBRARY_TYPE SHARED)
+endif(WINCE)
+
+find_package(iconv)
+set(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES} ${ICONV_INCLUDE_DIR})
+set(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} ${ICONV_LIBRARIES})
+
+include_directories(${ICONV_INCLUDE_DIR})
+
+if(MSVC)
+    add_definitions(-wd4996 -D_CRT_SECURE_NO_DEPRECATE -D_CRT_SECURE_NO_WARNINGS)
+endif(MSVC)
+
+add_subdirectory(gettext-runtime)
+#add_subdirectory(gettext-tools)
diff -Nru -x '*~' gettext-0.18.orig/gettext-runtime/CMakeLists.txt gettext-0.18/gettext-runtime/CMakeLists.txt
--- gettext-0.18.orig/gettext-runtime/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ gettext-0.18/gettext-runtime/CMakeLists.txt	2013-03-19 08:59:57.007780300 +0100
@@ -0,0 +1,23 @@
+cmake_minimum_required(VERSION 2.6)
+set(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS ON)
+
+project(gettext-runtime)
+
+include(ConfigureChecks.cmake)
+
+include_directories(${CMAKE_CURRENT_BINARY_DIR})
+
+
+#add_subdirectory(doc)
+add_subdirectory(intl)
+#add_subdirectory(intl-java)
+#add_subdirectory(intl-csharp)
+#add_subdirectory(gnulib-lib)
+#add_subdirectory(src)
+#add_subdirectory(po)
+#add_subdirectory(man)
+#add_subdirectory(m4)
+#add_subdirectory(tests)
+
+
+
diff -Nru -x '*~' gettext-0.18.orig/gettext-runtime/config.h.cmake gettext-0.18/gettext-runtime/config.h.cmake
--- gettext-0.18.orig/gettext-runtime/config.h.cmake	1970-01-01 01:00:00.000000000 +0100
+++ gettext-0.18/gettext-runtime/config.h.cmake	2013-03-19 09:28:16.508986200 +0100
@@ -0,0 +1,1276 @@
+/* config.h.in.  Generated from configure.ac by autoheader.  */
+
+/* Define if the compiler is building for multiple architectures of Apple
+   platforms at once. */
+#cmakedefine AA_APPLE_UNIVERSAL_BUILD
+
+/* Define to the number of bits in type 'ptrdiff_t'. */
+#cmakedefine BITSIZEOF_PTRDIFF_T @BITSIZEOF_PTRDIFF_T@
+
+/* Define to the number of bits in type 'sig_atomic_t'. */
+#cmakedefine BITSIZEOF_SIG_ATOMIC_T @BITSIZEOF_SIG_ATOMIC_T@
+
+/* Define to the number of bits in type 'size_t'. */
+#cmakedefine BITSIZEOF_SIZE_T @BITSIZEOF_SIZE_T@
+
+/* Define to the number of bits in type 'wchar_t'. */
+#cmakedefine BITSIZEOF_WCHAR_T @BITSIZEOF_WCHAR_T@
+
+/* Define to the number of bits in type 'wint_t'. */
+#cmakedefine BITSIZEOF_WINT_T @BITSIZEOF_WINT_T@
+
+/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP
+   systems. This function is required for `alloca.c' support on those systems.
+   */
+#cmakedefine CRAY_STACKSEG_END
+
+/* Define if mono is the preferred C# implementation. */
+#cmakedefine CSHARP_CHOICE_MONO
+
+/* Define if pnet is the preferred C# implementation. */
+#cmakedefine CSHARP_CHOICE_PNET
+
+/* Define to 1 if using `alloca.c'. */
+#cmakedefine C_ALLOCA
+
+/* Define to 1 if // is a file system root distinct from /. */
+#cmakedefine DOUBLE_SLASH_IS_DISTINCT_ROOT
+
+/* Define to 1 if translation of program messages to the user's native
+   language is requested. */
+#cmakedefine ENABLE_NLS
+
+/* Define to 1 if the package shall run at any location in the file system. */
+#cmakedefine ENABLE_RELOCATABLE
+
+/* Define on systems for which file names may have a so-called `drive letter'
+   prefix, define this to compute the length of that prefix, including the
+   colon. */
+#cmakedefine FILE_SYSTEM_ACCEPTS_DRIVE_LETTER_PREFIX
+
+/* Define if the backslash character may also serve as a file name component
+   separator. */
+#cmakedefine FILE_SYSTEM_BACKSLASH_IS_FILE_NAME_SEPARATOR @FILE_SYSTEM_BACKSLASH_IS_FILE_NAME_SEPARATOR@
+
+/* Define if a drive letter prefix denotes a relative path if it is not
+   followed by a file name component separator. */
+#cmakedefine FILE_SYSTEM_DRIVE_PREFIX_CAN_BE_RELATIVE
+
+/* Define to 1 if realpath() can malloc memory, always gives an absolute path,
+   and handles trailing slash correctly. */
+#cmakedefine FUNC_REALPATH_WORKS
+
+/* Define to a C preprocessor expression that evaluates to 1 or 0, depending
+   whether the gnulib module canonicalize-lgpl shall be considered present. */
+#cmakedefine GNULIB_CANONICALIZE_LGPL
+
+/* Define to a C preprocessor expression that evaluates to 1 or 0, depending
+   whether the gnulib module fwriteerror shall be considered present. */
+#cmakedefine GNULIB_FWRITEERROR
+
+/* Define to a C preprocessor expression that evaluates to 1 or 0, depending
+   whether the gnulib module sigpipe shall be considered present. */
+#cmakedefine GNULIB_SIGPIPE
+
+/* Define to 1 when the gnulib module canonicalize_file_name should be tested.
+   */
+#cmakedefine GNULIB_TEST_CANONICALIZE_FILE_NAME
+
+/* Define to 1 when the gnulib module environ should be tested. */
+#cmakedefine GNULIB_TEST_ENVIRON
+
+/* Define to 1 when the gnulib module getopt-gnu should be tested. */
+#cmakedefine GNULIB_TEST_GETOPT_GNU
+
+/* Define to 1 when the gnulib module lstat should be tested. */
+#cmakedefine GNULIB_TEST_LSTAT
+
+/* Define to 1 when the gnulib module malloc-posix should be tested. */
+#cmakedefine GNULIB_TEST_MALLOC_POSIX
+
+/* Define to 1 when the gnulib module mbrtowc should be tested. */
+#cmakedefine GNULIB_TEST_MBRTOWC
+
+/* Define to 1 when the gnulib module mbsinit should be tested. */
+#cmakedefine GNULIB_TEST_MBSINIT
+
+/* Define to 1 when the gnulib module mbslen should be tested. */
+#cmakedefine GNULIB_TEST_MBSLEN
+
+/* Define to 1 when the gnulib module mbsstr should be tested. */
+#cmakedefine GNULIB_TEST_MBSSTR
+
+/* Define to 1 when the gnulib module memchr should be tested. */
+#cmakedefine GNULIB_TEST_MEMCHR
+
+/* Define to 1 when the gnulib module readlink should be tested. */
+#cmakedefine GNULIB_TEST_READLINK
+
+/* Define to 1 when the gnulib module realpath should be tested. */
+#cmakedefine GNULIB_TEST_REALPATH
+
+/* Define to 1 when the gnulib module sigprocmask should be tested. */
+#cmakedefine GNULIB_TEST_SIGPROCMASK
+
+/* Define to 1 when the gnulib module stat should be tested. */
+#cmakedefine GNULIB_TEST_STAT
+
+/* Define to 1 when the gnulib module strerror should be tested. */
+#cmakedefine GNULIB_TEST_STRERROR
+
+/* Define to 1 when the gnulib module strnlen should be tested. */
+#cmakedefine GNULIB_TEST_STRNLEN
+
+/* Define to 1 when the gnulib module wcwidth should be tested. */
+#cmakedefine GNULIB_TEST_WCWIDTH
+
+/* Define to 1 if you have `alloca', as a function or macro. */
+#cmakedefine HAVE_ALLOCA 1
+
+/* Define to 1 if you have <alloca.h> and it should be used (not on Ultrix).
+   */
+#cmakedefine HAVE_ALLOCA_H 1
+
+/* Define to 1 if you have the `argz_count' function. */
+#cmakedefine HAVE_ARGZ_COUNT 1
+
+/* Define to 1 if you have the <argz.h> header file. */
+#cmakedefine HAVE_ARGZ_H 1
+
+/* Define to 1 if you have the `argz_next' function. */
+#cmakedefine HAVE_ARGZ_NEXT 1
+
+/* Define to 1 if you have the `argz_stringify' function. */
+#cmakedefine HAVE_ARGZ_STRINGIFY 1
+
+/* Define to 1 if you have the `asprintf' function. */
+#cmakedefine HAVE_ASPRINTF 1
+
+/* Define to 1 if you have the `atexit' function. */
+#cmakedefine HAVE_ATEXIT 1
+
+/* Define to 1 if you have the <bp-sym.h> header file. */
+#cmakedefine HAVE_BP_SYM_H 1
+
+/* Define to 1 if the compiler understands __builtin_expect. */
+#cmakedefine HAVE_BUILTIN_EXPECT 1
+
+/* Define to 1 if you have the `canonicalize_file_name' function. */
+#cmakedefine HAVE_CANONICALIZE_FILE_NAME 1
+
+/* Define to 1 if you have the MacOS X function CFLocaleCopyCurrent in the
+   CoreFoundation framework. */
+#cmakedefine HAVE_CFLOCALECOPYCURRENT 1
+
+/* Define to 1 if you have the MacOS X function CFPreferencesCopyAppValue in
+   the CoreFoundation framework. */
+#cmakedefine HAVE_CFPREFERENCESCOPYAPPVALUE 1
+
+/* Define if the GNU dcgettext() function is already present or preinstalled.
+   */
+#cmakedefine HAVE_DCGETTEXT
+
+/* Define to 1 if you have the declaration of `clearerr_unlocked', and to 0 if
+   you don't. */
+#cmakedefine HAVE_DECL_CLEARERR_UNLOCKED 1
+
+/* Define to 1 if you have the declaration of `feof_unlocked', and to 0 if you
+   don't. */
+#cmakedefine HAVE_DECL_FEOF_UNLOCKED 1
+
+/* Define to 1 if you have the declaration of `ferror_unlocked', and to 0 if
+   you don't. */
+#cmakedefine HAVE_DECL_FERROR_UNLOCKED 1
+
+/* Define to 1 if you have the declaration of `fflush_unlocked', and to 0 if
+   you don't. */
+#cmakedefine HAVE_DECL_FFLUSH_UNLOCKED 1
+
+/* Define to 1 if you have the declaration of `fgets_unlocked', and to 0 if
+   you don't. */
+#cmakedefine HAVE_DECL_FGETS_UNLOCKED 1
+
+/* Define to 1 if you have the declaration of `fputc_unlocked', and to 0 if
+   you don't. */
+#cmakedefine HAVE_DECL_FPUTC_UNLOCKED 1
+
+/* Define to 1 if you have the declaration of `fputs_unlocked', and to 0 if
+   you don't. */
+#cmakedefine HAVE_DECL_FPUTS_UNLOCKED 1
+
+/* Define to 1 if you have the declaration of `fread_unlocked', and to 0 if
+   you don't. */
+#cmakedefine HAVE_DECL_FREAD_UNLOCKED 1
+
+/* Define to 1 if you have the declaration of `fwrite_unlocked', and to 0 if
+   you don't. */
+#cmakedefine HAVE_DECL_FWRITE_UNLOCKED 1
+
+/* Define to 1 if you have the declaration of `getchar_unlocked', and to 0 if
+   you don't. */
+#cmakedefine HAVE_DECL_GETCHAR_UNLOCKED 1
+
+/* Define to 1 if you have the declaration of `getc_unlocked', and to 0 if you
+   don't. */
+#cmakedefine HAVE_DECL_GETC_UNLOCKED 1
+
+/* Define to 1 if you have the declaration of `getenv', and to 0 if you don't.
+   */
+#cmakedefine HAVE_DECL_GETENV 1
+
+/* Define to 1 if you have the declaration of `getopt_clip', and to 0 if you
+   don't. */
+#cmakedefine HAVE_DECL_GETOPT_CLIP 1
+
+/* Define to 1 if you have the declaration of `optreset', and to 0 if you
+   don't. */
+#cmakedefine HAVE_DECL_OPTRESET 1
+
+/* Define to 1 if you have the declaration of `program_invocation_name', and
+   to 0 if you don't. */
+#cmakedefine HAVE_DECL_PROGRAM_INVOCATION_NAME 1
+
+/* Define to 1 if you have the declaration of `program_invocation_short_name',
+   and to 0 if you don't. */
+#cmakedefine HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME 1
+
+/* Define to 1 if you have the declaration of `putchar_unlocked', and to 0 if
+   you don't. */
+#cmakedefine HAVE_DECL_PUTCHAR_UNLOCKED 1
+
+/* Define to 1 if you have the declaration of `putc_unlocked', and to 0 if you
+   don't. */
+#cmakedefine HAVE_DECL_PUTC_UNLOCKED 1
+
+/* Define to 1 if you have the declaration of `strerror', and to 0 if you
+   don't. */
+#cmakedefine HAVE_DECL_STRERROR 1
+
+/* Define to 1 if you have the declaration of `strerror_r', and to 0 if you
+   don't. */
+#cmakedefine HAVE_DECL_STRERROR_R 1
+
+/* Define to 1 if you have the declaration of `strnlen', and to 0 if you
+   don't. */
+#cmakedefine HAVE_DECL_STRNLEN 1
+
+/* Define to 1 if you have the declaration of `wcwidth', and to 0 if you
+   don't. */
+#cmakedefine HAVE_DECL_WCWIDTH 1
+
+/* Define to 1 if you have the declaration of `_snprintf', and to 0 if you
+   don't. */
+#cmakedefine HAVE_DECL__SNPRINTF 1
+
+/* Define to 1 if you have the declaration of `_snwprintf', and to 0 if you
+   don't. */
+#cmakedefine HAVE_DECL__SNWPRINTF 1
+
+/* Define to 1 if you have the <dlfcn.h> header file. */
+#cmakedefine HAVE_DLFCN_H 1
+
+/* Define if you have the declaration of environ. */
+#cmakedefine HAVE_ENVIRON_DECL 1
+
+/* Define to 1 if you have the <errno.h> header file. */
+#cmakedefine HAVE_ERRNO_H 1
+
+/* Define to 1 if you have the `fwprintf' function. */
+#cmakedefine HAVE_FWPRINTF 1
+
+/* Define to 1 if you have the `getcwd' function. */
+#cmakedefine HAVE_GETCWD 1
+
+/* Define to 1 if you have the `_getcwd' function. */
+#cmakedefine HAVE_GETCWD2 1
+
+/* Define to 1 if you have the `getegid' function. */
+#cmakedefine HAVE_GETEGID 1
+
+/* Define to 1 if you have the `geteuid' function. */
+#cmakedefine HAVE_GETEUID 1
+
+/* Define to 1 if you have the `getgid' function. */
+#cmakedefine HAVE_GETGID 1
+
+/* Define to 1 if you have the <getopt.h> header file. */
+#cmakedefine HAVE_GETOPT_H 1
+
+/* Define to 1 if you have the `getopt_long_only' function. */
+#cmakedefine HAVE_GETOPT_LONG_ONLY 1
+
+/* Define to 1 if you have the `getpagesize' function. */
+#cmakedefine HAVE_GETPAGESIZE 1
+
+/* Define if the GNU gettext() function is already present or preinstalled. */
+#cmakedefine HAVE_GETTEXT 1
+
+/* Define to 1 if you have the `getuid' function. */
+#cmakedefine HAVE_GETUID 1
+
+/* Define if you have the iconv() function and it works. */
+#cmakedefine HAVE_ICONV @HAVE_ICONV@
+
+/* Define to 1 if you have the <iconv.h> header file. */
+#cmakedefine HAVE_ICONV_H 1
+
+/* Define if you have the 'intmax_t' type in <stdint.h> or <inttypes.h>. */
+#cmakedefine HAVE_INTMAX_T 1
+
+/* Define to 1 if you have the <inttypes.h> header file. */
+#cmakedefine HAVE_INTTYPES_H 1
+
+/* Define if <inttypes.h> exists, doesn't clash with <sys/types.h>, and
+   declares uintmax_t. */
+#cmakedefine HAVE_INTTYPES_H_WITH_UINTMAX 1
+
+/* Define to 1 if you have the `iswblank' function. */
+#cmakedefine HAVE_ISWBLANK 1
+
+/* Define to 1 if you have the `iswcntrl' function. */
+#cmakedefine HAVE_ISWCNTRL 1
+
+/* Define if you have <langinfo.h> and nl_langinfo(CODESET). */
+#cmakedefine HAVE_LANGINFO_CODESET
+
+/* Define if your <locale.h> file defines LC_MESSAGES. */
+#cmakedefine HAVE_LC_MESSAGES
+
+/* Define to 1 if you have the <limits.h> header file. */
+#cmakedefine HAVE_LIMITS_H 1
+
+/* Define to 1 if the system has the type `long long int'. */
+#cmakedefine HAVE_LONG_LONG_INT 1
+
+/* Define to 1 if you have the `lstat' function. */
+#cmakedefine HAVE_LSTAT 1
+
+/* Define to 1 if you have the <mach-o/dyld.h> header file. */
+#cmakedefine HAVE_MACH_O_DYLD_H 1
+
+/* Define if the 'malloc' function is POSIX compliant. */
+#cmakedefine HAVE_MALLOC_POSIX
+
+/* Define to 1 if mmap()'s MAP_ANONYMOUS flag is available after including
+   config.h and <sys/mman.h>. */
+#cmakedefine HAVE_MAP_ANONYMOUS 1
+
+/* Define to 1 if you have the `mbrtowc' function. */
+#cmakedefine HAVE_MBRTOWC 1
+
+/* Define to 1 if you have the `mbsinit' function. */
+#cmakedefine HAVE_MBSINIT 1
+
+/* Define to 1 if you have the `mbslen' function. */
+#cmakedefine HAVE_MBSLEN 1
+
+/* Define to 1 if <wchar.h> declares mbstate_t. */
+#cmakedefine HAVE_MBSTATE_T 1
+
+/* Define to 1 if you have the `memchr' function. */
+#cmakedefine HAVE_MEMCHR 1
+
+/* Define to 1 if you have the `memmove' function. */
+#cmakedefine HAVE_MEMMOVE 1
+
+/* Define to 1 if you have the <memory.h> header file. */
+#cmakedefine HAVE_MEMORY_H 1
+
+/* Define to 1 if you have the `mempcpy' function. */
+#cmakedefine HAVE_MEMPCPY 1
+
+/* Define to 1 if you have a working `mmap' system call. */
+#cmakedefine HAVE_MMAP 1
+
+/* Define to 1 if you have the `mprotect' function. */
+#cmakedefine HAVE_MPROTECT 1
+
+/* Define to 1 if you have the `munmap' function. */
+#cmakedefine HAVE_MUNMAP 1
+
+/* Define to 1 if you have the `newlocale' function. */
+#cmakedefine HAVE_NEWLOCALE 1
+
+/* Define to 1 if you have the `pathconf' function. */
+#cmakedefine HAVE_PATHCONF 1
+
+/* Define if your printf() function supports format strings with positions. */
+#cmakedefine HAVE_POSIX_PRINTF
+
+/* Define if the <pthread.h> defines PTHREAD_MUTEX_RECURSIVE. */
+#cmakedefine HAVE_PTHREAD_MUTEX_RECURSIVE
+
+/* Define if the POSIX multithreading library has read/write locks. */
+#cmakedefine HAVE_PTHREAD_RWLOCK
+
+/* Define to 1 if you have the `putenv' function. */
+#cmakedefine HAVE_PUTENV 1
+
+/* Define to 1 if you have the <random.h> header file. */
+#cmakedefine HAVE_RANDOM_H 1
+
+/* Define to 1 if atoll is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_ATOLL 1
+
+/* Define to 1 if btowc is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_BTOWC 1
+
+/* Define to 1 if canonicalize_file_name is declared even after undefining
+   macros. */
+#cmakedefine HAVE_RAW_DECL_CANONICALIZE_FILE_NAME 1
+
+/* Define to 1 if chown is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_CHOWN 1
+
+/* Define to 1 if dprintf is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_DPRINTF 1
+
+/* Define to 1 if dup2 is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_DUP2 1
+
+/* Define to 1 if dup3 is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_DUP3 1
+
+/* Define to 1 if endusershell is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_ENDUSERSHELL 1
+
+/* Define to 1 if environ is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_ENVIRON 1
+
+/* Define to 1 if euidaccess is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_EUIDACCESS 1
+
+/* Define to 1 if faccessat is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_FACCESSAT 1
+
+/* Define to 1 if fchdir is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_FCHDIR 1
+
+/* Define to 1 if fchmodat is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_FCHMODAT 1
+
+/* Define to 1 if fchownat is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_FCHOWNAT 1
+
+/* Define to 1 if fpurge is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_FPURGE 1
+
+/* Define to 1 if fseeko is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_FSEEKO 1
+
+/* Define to 1 if fstatat is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_FSTATAT 1
+
+/* Define to 1 if fsync is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_FSYNC 1
+
+/* Define to 1 if ftello is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_FTELLO 1
+
+/* Define to 1 if ftruncate is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_FTRUNCATE 1
+
+/* Define to 1 if futimens is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_FUTIMENS 1
+
+/* Define to 1 if getcwd is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_GETCWD 1
+
+/* Define to 1 if getdelim is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_GETDELIM 1
+
+/* Define to 1 if getdomainname is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_GETDOMAINNAME 1
+
+/* Define to 1 if getdtablesize is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_GETDTABLESIZE 1
+
+/* Define to 1 if getgroups is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_GETGROUPS 1
+
+/* Define to 1 if gethostname is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_GETHOSTNAME 1
+
+/* Define to 1 if getline is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_GETLINE 1
+
+/* Define to 1 if getloadavg is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_GETLOADAVG 1
+
+/* Define to 1 if getlogin is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_GETLOGIN 1
+
+/* Define to 1 if getlogin_r is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_GETLOGIN_R 1
+
+/* Define to 1 if getpagesize is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_GETPAGESIZE 1
+
+/* Define to 1 if getsubopt is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_GETSUBOPT 1
+
+/* Define to 1 if getusershell is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_GETUSERSHELL 1
+
+/* Define to 1 if grantpt is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_GRANTPT 1
+
+/* Define to 1 if initstat_r is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_INITSTAT_R 1
+
+/* Define to 1 if lchmod is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_LCHMOD
+
+/* Define to 1 if lchown is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_LCHOWN
+
+/* Define to 1 if link is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_LINK
+
+/* Define to 1 if linkat is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_LINKAT
+
+/* Define to 1 if lseek is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_LSEEK
+
+/* Define to 1 if lstat is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_LSTAT
+
+/* Define to 1 if mbrlen is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_MBRLEN
+
+/* Define to 1 if mbrtowc is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_MBRTOWC
+
+/* Define to 1 if mbsinit is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_MBSINIT
+
+/* Define to 1 if mbsnrtowcs is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_MBSNRTOWCS
+
+/* Define to 1 if mbsrtowcs is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_MBSRTOWCS
+
+/* Define to 1 if memmem is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_MEMMEM
+
+/* Define to 1 if mempcpy is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_MEMPCPY
+
+/* Define to 1 if memrchr is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_MEMRCHR
+
+/* Define to 1 if mkdirat is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_MKDIRAT
+
+/* Define to 1 if mkdtemp is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_MKDTEMP
+
+/* Define to 1 if mkfifo is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_MKFIFO
+
+/* Define to 1 if mkfifoat is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_MKFIFOAT
+
+/* Define to 1 if mknod is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_MKNOD
+
+/* Define to 1 if mknodat is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_MKNODAT
+
+/* Define to 1 if mkostemp is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_MKOSTEMP
+
+/* Define to 1 if mkostemps is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_MKOSTEMPS
+
+/* Define to 1 if mkstemp is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_MKSTEMP
+
+/* Define to 1 if mkstemps is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_MKSTEMPS
+
+/* Define to 1 if pipe2 is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_PIPE2
+
+/* Define to 1 if popen is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_POPEN
+
+/* Define to 1 if pread is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_PREAD
+
+/* Define to 1 if ptsname is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_PTSNAME
+
+/* Define to 1 if pwrite is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_PWRITE
+
+/* Define to 1 if random_r is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_RANDOM_R
+
+/* Define to 1 if rawmemchr is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_RAWMEMCHR
+
+/* Define to 1 if readlink is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_READLINK
+
+/* Define to 1 if readlinkat is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_READLINKAT
+
+/* Define to 1 if realpath is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_REALPATH
+
+/* Define to 1 if renameat is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_RENAMEAT
+
+/* Define to 1 if rmdir is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_RMDIR
+
+/* Define to 1 if rpmatch is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_RPMATCH
+
+/* Define to 1 if setenv is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_SETENV
+
+/* Define to 1 if setstate_r is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_SETSTATE_R
+
+/* Define to 1 if setusershell is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_SETUSERSHELL
+
+/* Define to 1 if sigaction is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_SIGACTION
+
+/* Define to 1 if sigaddset is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_SIGADDSET
+
+/* Define to 1 if sigdelset is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_SIGDELSET
+
+/* Define to 1 if sigemptyset is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_SIGEMPTYSET
+
+/* Define to 1 if sigfillset is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_SIGFILLSET
+
+/* Define to 1 if sigismember is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_SIGISMEMBER
+
+/* Define to 1 if sigpending is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_SIGPENDING
+
+/* Define to 1 if sigprocmask is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_SIGPROCMASK
+
+/* Define to 1 if sleep is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_SLEEP
+
+/* Define to 1 if snprintf is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_SNPRINTF
+
+/* Define to 1 if srandom_r is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_SRANDOM_R
+
+/* Define to 1 if stat is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_STAT
+
+/* Define to 1 if stpcpy is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_STPCPY
+
+/* Define to 1 if stpncpy is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_STPNCPY
+
+/* Define to 1 if strcasestr is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_STRCASESTR
+
+/* Define to 1 if strchrnul is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_STRCHRNUL
+
+/* Define to 1 if strdup is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_STRDUP
+
+/* Define to 1 if strncat is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_STRNCAT
+
+/* Define to 1 if strndup is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_STRNDUP
+
+/* Define to 1 if strnlen is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_STRNLEN
+
+/* Define to 1 if strpbrk is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_STRPBRK
+
+/* Define to 1 if strsep is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_STRSEP
+
+/* Define to 1 if strsignal is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_STRSIGNAL
+
+/* Define to 1 if strtod is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_STRTOD
+
+/* Define to 1 if strtok_r is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_STRTOK_R
+
+/* Define to 1 if strtoll is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_STRTOLL
+
+/* Define to 1 if strtoull is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_STRTOULL
+
+/* Define to 1 if strverscmp is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_STRVERSCMP
+
+/* Define to 1 if symlink is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_SYMLINK
+
+/* Define to 1 if symlinkat is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_SYMLINKAT
+
+/* Define to 1 if tmpfile is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_TMPFILE
+
+/* Define to 1 if ttyname_r is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_TTYNAME_R
+
+/* Define to 1 if unlink is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_UNLINK
+
+/* Define to 1 if unlinkat is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_UNLINKAT
+
+/* Define to 1 if unlockpt is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_UNLOCKPT
+
+/* Define to 1 if unsetenv is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_UNSETENV
+
+/* Define to 1 if usleep is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_USLEEP
+
+/* Define to 1 if utimensat is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_UTIMENSAT
+
+/* Define to 1 if vdprintf is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_VDPRINTF
+
+/* Define to 1 if vsnprintf is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_VSNPRINTF
+
+/* Define to 1 if wcrtomb is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_WCRTOMB
+
+/* Define to 1 if wcsnrtombs is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_WCSNRTOMBS
+
+/* Define to 1 if wcsrtombs is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_WCSRTOMBS
+
+/* Define to 1 if wctob is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_WCTOB
+
+/* Define to 1 if wcwidth is declared even after undefining macros. */
+#cmakedefine HAVE_RAW_DECL_WCWIDTH
+
+/* Define to 1 if you have the `readlink' function. */
+#cmakedefine HAVE_READLINK 1
+
+/* Define to 1 if you have the `realpath' function. */
+#cmakedefine HAVE_REALPATH 1
+
+/* Define to 1 if you have the <search.h> header file. */
+#cmakedefine HAVE_SEARCH_H 1
+
+/* Define to 1 if you have the `setenv' function. */
+#cmakedefine HAVE_SETENV 1
+
+/* Define to 1 if you have the `setlocale' function. */
+#cmakedefine HAVE_SETLOCALE 1
+
+/* Define to 1 if you have the <signal.h> header file. */
+#cmakedefine HAVE_SIGNAL_H 1
+
+/* Define to 1 if 'sig_atomic_t' is a signed integer type. */
+#cmakedefine HAVE_SIGNED_SIG_ATOMIC_T 1
+
+/* Define to 1 if 'wchar_t' is a signed integer type. */
+#cmakedefine HAVE_SIGNED_WCHAR_T 1
+
+/* Define to 1 if 'wint_t' is a signed integer type. */
+#cmakedefine HAVE_SIGNED_WINT_T 1
+
+/* Define to 1 if the system has the type `sigset_t'. */
+#cmakedefine HAVE_SIGSET_T 1
+
+/* Define to 1 if you have the `snprintf' function. */
+#cmakedefine HAVE_SNPRINTF 1
+
+/* Define to 1 if stdbool.h conforms to C99. */
+#cmakedefine HAVE_STDBOOL_H 1
+
+/* Define to 1 if you have the <stddef.h> header file. */
+#cmakedefine HAVE_STDDEF_H 1
+
+/* Define to 1 if you have the <stdint.h> header file. */
+#cmakedefine HAVE_STDINT_H 1
+
+/* Define if <stdint.h> exists, doesn't clash with <sys/types.h>, and declares
+   uintmax_t. */
+#cmakedefine HAVE_STDINT_H_WITH_UINTMAX 1
+
+/* Define to 1 if you have the <stdio.h> header file. */
+#cmakedefine HAVE_STDIO_H 1
+
+/* Define to 1 if you have the <stdlib.h> header file. */
+#cmakedefine HAVE_STDLIB_H 1
+
+/* Define to 1 if you have the `stpcpy' function. */
+#cmakedefine HAVE_STPCPY 1
+
+/* Define to 1 if you have the `strcasecmp' function. */
+#cmakedefine HAVE_STRCASECMP 1
+
+/* Define to 1 if you have the `strdup' function. */
+#cmakedefine HAVE_STRDUP 1
+
+/* Define to 1 if you have the `strerror_r' function. */
+#cmakedefine HAVE_STRERROR_R 1
+
+/* Define to 1 if you have the <strings.h> header file. */
+#cmakedefine HAVE_STRINGS_H 1
+
+/* Define to 1 if you have the <string.h> header file. */
+#cmakedefine HAVE_STRING_H 1
+
+/* Define to 1 if you have the `strnlen' function. */
+#cmakedefine HAVE_STRNLEN 1
+
+/* Define to 1 if you have the `strtol' function. */
+#cmakedefine HAVE_STRTOL 1
+
+/* Define to 1 if you have the `strtoul' function. */
+#cmakedefine HAVE_STRTOUL 1
+
+/* Define to 1 if the system has the type `struct random_data'. */
+#cmakedefine HAVE_STRUCT_RANDOM_DATA 1
+
+/* Define to 1 if you have the <sys/bitypes.h> header file. */
+#cmakedefine HAVE_SYS_BITYPES_H 1
+
+/* Define to 1 if you have the <sys/inttypes.h> header file. */
+#cmakedefine HAVE_SYS_INTTYPES_H 1
+
+/* Define to 1 if you have the <sys/mman.h> header file. */
+#cmakedefine HAVE_SYS_MMAN_H 1
+
+/* Define to 1 if you have the <sys/param.h> header file. */
+#cmakedefine HAVE_SYS_PARAM_H 1
+
+/* Define to 1 if you have the <sys/socket.h> header file. */
+#cmakedefine HAVE_SYS_SOCKET_H 1
+
+/* Define to 1 if you have the <sys/stat.h> header file. */
+#cmakedefine HAVE_SYS_STAT_H 1
+
+/* Define to 1 if you have the <sys/time.h> header file. */
+#cmakedefine HAVE_SYS_TIME_H 1
+
+/* Define to 1 if you have the <sys/types.h> header file. */
+#cmakedefine HAVE_SYS_TYPES_H 1
+
+/* Define to 1 if you have the <time.h> header file. */
+#cmakedefine HAVE_TIME_H 1
+
+/* Define to 1 if you have the `tsearch' function. */
+#cmakedefine HAVE_TSEARCH 1
+
+/* Define if you have the 'uintmax_t' type in <stdint.h> or <inttypes.h>. */
+#cmakedefine HAVE_UINTMAX_T 1
+
+/* Define to 1 if you have the <unistd.h> header file. */
+#cmakedefine HAVE_UNISTD_H 1
+
+/* Define to 1 if the system has the type `unsigned long long int'. */
+#cmakedefine HAVE_UNSIGNED_LONG_LONG_INT 1
+
+/* Define to 1 if you have the `uselocale' function. */
+#cmakedefine HAVE_USELOCALE 1
+
+/* Define to 1 or 0, depending whether the compiler supports simple visibility
+   declarations. */
+#cmakedefine HAVE_VISIBILITY 1
+
+/* Define to 1 if you have the <wchar.h> header file. */
+#cmakedefine HAVE_WCHAR_H 1
+
+/* Define if you have the 'wchar_t' type. */
+#cmakedefine HAVE_WCHAR_T
+
+/* Define to 1 if you have the `wcrtomb' function. */
+#cmakedefine HAVE_WCRTOMB 1
+
+/* Define to 1 if you have the `wcslen' function. */
+#cmakedefine HAVE_WCSLEN 1
+
+/* Define to 1 if you have the `wcsnlen' function. */
+#cmakedefine HAVE_WCSNLEN 1
+
+/* Define to 1 if you have the <wctype.h> header file. */
+#cmakedefine HAVE_WCTYPE_H 1
+
+/* Define to 1 if you have the `wcwidth' function. */
+#cmakedefine HAVE_WCWIDTH 1
+
+/* Define to 1 if you have the <winsock2.h> header file. */
+#cmakedefine HAVE_WINSOCK2_H 1
+
+/* Define if you have the 'wint_t' type. */
+#cmakedefine HAVE_WINT_T
+
+/* Define to 1 if O_NOATIME works. */
+#cmakedefine HAVE_WORKING_O_NOATIME 1
+
+/* Define to 1 if O_NOFOLLOW works. */
+#cmakedefine HAVE_WORKING_O_NOFOLLOW 1
+
+/* Define to 1 if the system has the type `_Bool'. */
+#cmakedefine HAVE__BOOL 1
+
+/* Define to 1 if you have the `_NSGetExecutablePath' function. */
+#cmakedefine HAVE__NSGETEXECUTABLEPATH 1
+
+/* Define to 1 if you have the `__fsetlocking' function. */
+#cmakedefine HAVE___FSETLOCKING 1
+
+/* Define as const if the declaration of iconv() needs const. */
+#cmakedefine HAVE_ICONV_CONST @HAVE_ICONV_CONST@
+
+/* Define to a symbolic name denoting the flavor of iconv_open()
+   implementation. */
+#cmakedefine ICONV_FLAVOR
+
+/* Define to the value of ${prefix}, as a string. */
+#cmakedefine INSTALLPREFIX
+
+/* Define if integer division by zero raises signal SIGFPE. */
+#cmakedefine INTDIV0_RAISES_SIGFPE 1
+
+#if FILE_SYSTEM_BACKSLASH_IS_FILE_NAME_SEPARATOR
+# define ISSLASH(C) ((C) == '/' || (C) == '\\')
+#else
+# define ISSLASH(C) ((C) == '/')
+#endif
+
+/* Define to 1 if `lstat' dereferences a symlink specified with a trailing
+   slash. */
+#cmakedefine LSTAT_FOLLOWS_SLASHED_SYMLINK 1
+
+/* Define to the sub-directory in which libtool stores uninstalled libraries.
+   */
+#cmakedefine LT_OBJDIR
+
+/* If malloc(0) is != NULL, define this to 1. Otherwise define this to 0. */
+#cmakedefine MALLOC_0_IS_NONNULL 1
+
+/* Define to a substitute value for mmap()'s MAP_ANONYMOUS flag. */
+#cmakedefine MAP_ANONYMOUS
+
+/* Define if the mbrtowc function has the NULL string argument bug. */
+#cmakedefine MBRTOWC_NULL_ARG_BUG
+
+/* Define if the mbrtowc function does not return 0 for a NUL character. */
+#cmakedefine MBRTOWC_NUL_RETVAL_BUG
+
+/* Define if the mbrtowc function returns a wrong return value. */
+#cmakedefine MBRTOWC_RETVAL_BUG
+
+/* Define to 1 if your C compiler doesn't accept -c and -o together. */
+#cmakedefine NO_MINUS_C_MINUS_O
+
+/* Name of package */
+#cmakedefine PACKAGE
+
+/* Define to the address where bug reports for this package should be sent. */
+#cmakedefine PACKAGE_BUGREPORT
+
+/* Define to the full name of this package. */
+#cmakedefine PACKAGE_NAME
+
+/* Define to the full name and version of this package. */
+#cmakedefine PACKAGE_STRING
+
+/* Define to the one symbol short name of this package. */
+#cmakedefine PACKAGE_TARNAME
+
+/* Define to the home page for this package. */
+#cmakedefine PACKAGE_URL
+
+/* Define to the version of this package. */
+#cmakedefine PACKAGE_VERSION
+
+/* Define if <inttypes.h> exists and defines unusable PRI* macros. */
+#cmakedefine PRI_MACROS_BROKEN
+
+/* Define if the pthread_in_use() detection is hard. */
+#cmakedefine PTHREAD_IN_USE_DETECTION_HARD
+
+/* Define to l, ll, u, ul, ull, etc., as suitable for constants of type
+   'ptrdiff_t'. */
+#cmakedefine PTRDIFF_T_SUFFIX
+
+/* Define to 1 if readlink fails to recognize a trailing slash. */
+#cmakedefine READLINK_TRAILING_SLASH_BUG 1
+
+/* Define to 1 if stat needs help when passed a directory name with a trailing
+   slash */
+#cmakedefine REPLACE_FUNC_STAT_DIR 1
+
+/* Define to 1 if stat needs help when passed a file name with a trailing
+   slash */
+#cmakedefine REPLACE_FUNC_STAT_FILE 1
+
+/* Define this to 1 if strerror is broken. */
+#cmakedefine REPLACE_STRERROR 1
+
+/* Define to l, ll, u, ul, ull, etc., as suitable for constants of type
+   'sig_atomic_t'. */
+#cmakedefine SIG_ATOMIC_T_SUFFIX
+
+/* Define as the maximum value of type 'size_t', if the system doesn't define
+   it. */
+#ifndef SIZE_MAX
+# undef SIZE_MAX
+#endif
+
+/* Define to l, ll, u, ul, ull, etc., as suitable for constants of type
+   'size_t'. */
+#cmakedefine SIZE_T_SUFFIX
+
+/* If using the C implementation of alloca, define if you know the
+   direction of stack growth for your system; otherwise it will be
+   automatically deduced at runtime.
+	STACK_DIRECTION > 0 => grows toward higher addresses
+	STACK_DIRECTION < 0 => grows toward lower addresses
+	STACK_DIRECTION = 0 => direction of growth unknown */
+#cmakedefine STACK_DIRECTION
+
+/* Define to 1 if the `S_IS*' macros in <sys/stat.h> do not work properly. */
+#cmakedefine STAT_MACROS_BROKEN
+
+/* Define to 1 if you have the ANSI C header files. */
+#cmakedefine STDC_HEADERS
+
+/* Define to 1 if strerror_r returns char *. */
+#cmakedefine STRERROR_R_CHAR_P
+
+/* Define if the POSIX multithreading library can be used. */
+#cmakedefine USE_POSIX_THREADS
+
+/* Define if references to the POSIX multithreading library should be made
+   weak. */
+#cmakedefine USE_POSIX_THREADS_WEAK
+
+/* Define if the GNU Pth multithreading library can be used. */
+#cmakedefine USE_PTH_THREADS
+
+/* Define if references to the GNU Pth multithreading library should be made
+   weak. */
+#cmakedefine USE_PTH_THREADS_WEAK
+
+/* Define if the old Solaris multithreading library can be used. */
+#cmakedefine USE_SOLARIS_THREADS
+
+/* Define if references to the old Solaris multithreading library should be
+   made weak. */
+#cmakedefine USE_SOLARIS_THREADS_WEAK
+
+/* Define to 1 if you want getc etc. to use unlocked I/O if available.
+   Unlocked I/O can improve performance in unithreaded apps, but it is not
+   safe for multithreaded apps. */
+#cmakedefine USE_UNLOCKED_IO
+
+/* Define if the Win32 multithreading API can be used. */
+#cmakedefine USE_WIN32_THREADS
+
+/* Version number of package */
+#cmakedefine VERSION
+
+/* Define to l, ll, u, ul, ull, etc., as suitable for constants of type
+   'wchar_t'. */
+#cmakedefine WCHAR_T_SUFFIX
+
+/* Define to l, ll, u, ul, ull, etc., as suitable for constants of type
+   'wint_t'. */
+#cmakedefine WINT_T_SUFFIX
+
+/* Define to 1 if on MINIX. */
+#cmakedefine _MINIX
+
+/* Define to 2 if the system does not provide POSIX.1 features except with
+   this defined. */
+#cmakedefine _POSIX_1_SOURCE
+
+/* Define to 1 if you need to in order for `stat' and other things to work. */
+#cmakedefine _POSIX_SOURCE
+
+/* Define to 500 only on HP-UX. */
+#cmakedefine _XOPEN_SOURCE
+
+/* Enable extensions on AIX 3, Interix.  */
+#ifndef _ALL_SOURCE
+# undef _ALL_SOURCE
+#endif
+/* Enable GNU extensions on systems that have them.  */
+#ifndef _GNU_SOURCE
+# undef _GNU_SOURCE
+#endif
+/* Enable threading extensions on Solaris.  */
+#ifndef _POSIX_PTHREAD_SEMANTICS
+# undef _POSIX_PTHREAD_SEMANTICS
+#endif
+/* Enable extensions on HP NonStop.  */
+#ifndef _TANDEM_SOURCE
+# undef _TANDEM_SOURCE
+#endif
+/* Enable general extensions on Solaris.  */
+#ifndef __EXTENSIONS__
+# undef __EXTENSIONS__
+#endif
+
+
+/* Define to rpl_ if the getopt replacement functions and variables should be
+   used. */
+#cmakedefine __GETOPT_PREFIX
+
+/* Define to `int' if <sys/types.h> doesn't define. */
+#cmakedefine gid_t
+
+/* Define to `__inline__' or `__inline' if that's what the C compiler
+   calls it, or to nothing if 'inline' is not supported under any name.  */
+#ifndef __cplusplus
+#cmakedefine inline
+#endif
+
+/* Work around a bug in Apple GCC 4.0.1 build 5465: In C99 mode, it supports
+   the ISO C 99 semantics of 'extern inline' (unlike the GNU C semantics of
+   earlier versions), but does not display it by setting __GNUC_STDC_INLINE__.
+   __APPLE__ && __MACH__ test for MacOS X.
+   __APPLE_CC__ tests for the Apple compiler and its version.
+   __STDC_VERSION__ tests for the C99 mode.  */
+#if defined __APPLE__ && defined __MACH__ && __APPLE_CC__ >= 5465 && !defined __cplusplus && __STDC_VERSION__ >= 199901L && !defined __GNUC_STDC_INLINE__
+# define __GNUC_STDC_INLINE__ 1
+#endif
+
+/* Define to a type if <wchar.h> does not define. */
+#cmakedefine mbstate_t
+
+/* Define to the type of st_nlink in struct stat, or a supertype. */
+#cmakedefine nlink_t
+
+/* Define as the type of the result of subtracting two pointers, if the system
+   doesn't define it. */
+#cmakedefine ptrdiff_t
+
+/* Define to the equivalent of the C99 'restrict' keyword, or to
+   nothing if this is not supported.  Do not define if restrict is
+   supported directly.  */
+#cmakedefine restrict
+/* Work around a bug in Sun C++: it does not support _Restrict or
+   __restrict__, even though the corresponding Sun C compiler ends up with
+   "#define restrict _Restrict" or "#define restrict __restrict__" in the
+   previous line.  Perhaps some future version of Sun C++ will work with
+   restrict; if so, hopefully it defines __RESTRICT like Sun C does.  */
+#if defined __SUNPRO_CC && !defined __RESTRICT
+# define _Restrict
+# define __restrict__
+#endif
+
+/* Define to `unsigned int' if <sys/types.h> does not define. */
+#cmakedefine size_t
+
+/* Define as a signed type of the same size as size_t. */
+#cmakedefine ssize_t
+
+/* Define to `int' if <sys/types.h> doesn't define. */
+#cmakedefine uid_t
+
+/* Define to unsigned long or unsigned long long if <stdint.h> and
+   <inttypes.h> don't define. */
+#cmakedefine uintmax_t @uintmax_t@
+#cmakedefine intmax_t @intmax_t@
+
+/* Define as a marker that can be attached to declarations that might not
+    be used.  This helps to reduce warnings, such as from
+    GCC -Wunused-parameter.  */
+#if __GNUC__ >= 3 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 7)
+# define _GL_UNUSED __attribute__ ((__unused__))
+#else
+# define _GL_UNUSED
+#endif
+/* The name _UNUSED_PARAMETER_ is an earlier spelling, although the name
+   is a misnomer outside of parameter lists.  */
+#define _UNUSED_PARAMETER_ _GL_UNUSED
+
+
+
+#define __libc_lock_t                   gl_lock_t
+#define __libc_lock_define              gl_lock_define
+#define __libc_lock_define_initialized  gl_lock_define_initialized
+#define __libc_lock_init                gl_lock_init
+#define __libc_lock_lock                gl_lock_lock
+#define __libc_lock_unlock              gl_lock_unlock
+#define __libc_lock_recursive_t                   gl_recursive_lock_t
+#define __libc_lock_define_recursive              gl_recursive_lock_define
+#define __libc_lock_define_initialized_recursive  gl_recursive_lock_define_initialized
+#define __libc_lock_init_recursive                gl_recursive_lock_init
+#define __libc_lock_lock_recursive                gl_recursive_lock_lock
+#define __libc_lock_unlock_recursive              gl_recursive_lock_unlock
+#define glthread_in_use  libintl_thread_in_use
+#define glthread_lock_init_func     libintl_lock_init_func
+#define glthread_lock_lock_func     libintl_lock_lock_func
+#define glthread_lock_unlock_func   libintl_lock_unlock_func
+#define glthread_lock_destroy_func  libintl_lock_destroy_func
+#define glthread_rwlock_init_multithreaded     libintl_rwlock_init_multithreaded
+#define glthread_rwlock_init_func              libintl_rwlock_init_func
+#define glthread_rwlock_rdlock_multithreaded   libintl_rwlock_rdlock_multithreaded
+#define glthread_rwlock_rdlock_func            libintl_rwlock_rdlock_func
+#define glthread_rwlock_wrlock_multithreaded   libintl_rwlock_wrlock_multithreaded
+#define glthread_rwlock_wrlock_func            libintl_rwlock_wrlock_func
+#define glthread_rwlock_unlock_multithreaded   libintl_rwlock_unlock_multithreaded
+#define glthread_rwlock_unlock_func            libintl_rwlock_unlock_func
+#define glthread_rwlock_destroy_multithreaded  libintl_rwlock_destroy_multithreaded
+#define glthread_rwlock_destroy_func           libintl_rwlock_destroy_func
+#define glthread_recursive_lock_init_multithreaded     libintl_recursive_lock_init_multithreaded
+#define glthread_recursive_lock_init_func              libintl_recursive_lock_init_func
+#define glthread_recursive_lock_lock_multithreaded     libintl_recursive_lock_lock_multithreaded
+#define glthread_recursive_lock_lock_func              libintl_recursive_lock_lock_func
+#define glthread_recursive_lock_unlock_multithreaded   libintl_recursive_lock_unlock_multithreaded
+#define glthread_recursive_lock_unlock_func            libintl_recursive_lock_unlock_func
+#define glthread_recursive_lock_destroy_multithreaded  libintl_recursive_lock_destroy_multithreaded
+#define glthread_recursive_lock_destroy_func           libintl_recursive_lock_destroy_func
+#define glthread_once_func            libintl_once_func
+#define glthread_once_singlethreaded  libintl_once_singlethreaded
+#define glthread_once_multithreaded   libintl_once_multithreaded
+
+/* On Windows, variables that may be in a DLL must be marked specially.  */
+#if (defined _MSC_VER && defined _DLL) && !defined IN_RELOCWRAPPER
+# define DLL_VARIABLE __declspec (dllimport)
+#else
+# define DLL_VARIABLE
+#endif
+
+/* Extra OS/2 (emx+gcc) defines.  */
+#ifdef __EMX__
+# include "intl/os2compat.h"
+#endif
+
+#ifdef _MSC_VER
+#define inline __inline
+#endif
+
+#ifdef HAVE_ICONV_CONST
+#define ICONV_CONST const
+#else
+#define ICONV_CONST
+#endif
\ Kein Zeilenumbruch am Dateiende.
diff -Nru -x '*~' gettext-0.18.orig/gettext-runtime/ConfigureChecks.cmake gettext-0.18/gettext-runtime/ConfigureChecks.cmake
--- gettext-0.18.orig/gettext-runtime/ConfigureChecks.cmake	1970-01-01 01:00:00.000000000 +0100
+++ gettext-0.18/gettext-runtime/ConfigureChecks.cmake	2013-03-19 09:27:52.972640000 +0100
@@ -0,0 +1,161 @@
+include(CheckFunctionExists)
+include(CheckIncludeFile)
+include(CheckTypeSize)
+
+check_include_file("argz.h" HAVE_ARGZ_H)
+CHECK_INCLUDE_FILE("alloca.h" HAVE_ALLOCA_H)
+CHECK_INCLUDE_FILE("bp-sym.h" HAVE_BP_SYM_H)
+CHECK_INCLUDE_FILE("dlfcn.h" HAVE_DLFCN_H)
+CHECK_INCLUDE_FILE("direct.h" HAVE_DIRECT_H)
+CHECK_INCLUDE_FILE("errno.h" HAVE_ERRNO_H)
+CHECK_INCLUDE_FILE("getopt.h" HAVE_GETOPT_H)
+CHECK_INCLUDE_FILE("iconv.h" HAVE_ICONV_H)
+CHECK_INCLUDE_FILE("inttypes.h" HAVE_INTTYPES_H)
+CHECK_INCLUDE_FILE("limits.h" HAVE_LIMITS_H)
+CHECK_INCLUDE_FILE("mach-o/dyld.h" HAVE_MACH_O_DYLD_H)
+CHECK_INCLUDE_FILE("memory.h" HAVE_MEMORY_H)
+CHECK_INCLUDE_FILE("random.h" HAVE_RANDOM_H)
+CHECK_INCLUDE_FILE("search.h" HAVE_SEARCH_H)
+CHECK_INCLUDE_FILE("signal.h" HAVE_SIGNAL_H)
+CHECK_INCLUDE_FILE("stddef.h" HAVE_STDDEF_H)
+CHECK_INCLUDE_FILE("stdint.h" HAVE_STDINT_H)
+CHECK_INCLUDE_FILE("stdio.h" HAVE_STDIO_H)
+CHECK_INCLUDE_FILE("stdlib.h" HAVE_STDLIB_H)
+CHECK_INCLUDE_FILE("strings.h" HAVE_STRINGS_H)
+CHECK_INCLUDE_FILE("string.h" HAVE_STRING_H)
+CHECK_INCLUDE_FILE("sys/bitypes.h" HAVE_SYS_BITYPES_H)
+CHECK_INCLUDE_FILE("sys/inttypes.h" HAVE_SYS_INTTYPES_H)
+CHECK_INCLUDE_FILE("sys/mman.h" HAVE_SYS_MMAN_H)
+CHECK_INCLUDE_FILE("sys/param.h" HAVE_SYS_PARAM_H)
+CHECK_INCLUDE_FILE("sys/socket.h" HAVE_SYS_SOCKET_H)
+CHECK_INCLUDE_FILE("sys/stat.h" HAVE_SYS_STAT_H)
+CHECK_INCLUDE_FILE("sys/time.h" HAVE_SYS_TIME_H)
+CHECK_INCLUDE_FILE("sys/types.h" HAVE_SYS_TYPES_H)
+CHECK_INCLUDE_FILE("time.h" HAVE_TIME_H)
+CHECK_INCLUDE_FILE("unistd.h" HAVE_UNISTD_H)
+CHECK_INCLUDE_FILE("wchar.h" HAVE_WCHAR_H)
+CHECK_INCLUDE_FILE("wctype.h" HAVE_WCTYPE_H)
+CHECK_INCLUDE_FILE("winsock2.h" HAVE_WINSOCK2_H)
+
+
+CHECK_FUNCTION_EXISTS("argz_count" HAVE_ARGZ_COUNT)
+CHECK_FUNCTION_EXISTS("argz_next" HAVE_ARGZ_NEXT)
+CHECK_FUNCTION_EXISTS("argz_stringify" HAVE_ARGZ_STRINGIFY)
+CHECK_FUNCTION_EXISTS("alloca" HAVE_ALLOCA)
+if(MSVC)
+    set(HAVE_ALLOCA 1)
+endif(MSVC)
+CHECK_FUNCTION_EXISTS("asprintf" HAVE_ASPRINTF)
+CHECK_FUNCTION_EXISTS("atexit" HAVE_ATEXIT)
+CHECK_FUNCTION_EXISTS("canonicalize_file_name" HAVE_CANONICALIZE_FILE_NAME)
+CHECK_FUNCTION_EXISTS("CFLocaleCopyCurrent" HAVE_CFLOCALECOPYCURRENT)
+CHECK_FUNCTION_EXISTS("fwprintf" HAVE_FWPRINTF)
+CHECK_FUNCTION_EXISTS("getcwd" HAVE_GETCWD)
+CHECK_FUNCTION_EXISTS("_getcwd" HAVE_GETCWD2)
+CHECK_FUNCTION_EXISTS("getegid" HAVE_GETEGID)
+CHECK_FUNCTION_EXISTS("geteuid" HAVE_GETEUID)
+CHECK_FUNCTION_EXISTS("getgid" HAVE_GETGID)
+CHECK_FUNCTION_EXISTS("getopt_long_only" HAVE_GETOPT_LONG_ONLY)
+CHECK_FUNCTION_EXISTS("getpagesize" HAVE_GETPAGESIZE)
+CHECK_FUNCTION_EXISTS("gettext" HAVE_GETTEXT)
+CHECK_FUNCTION_EXISTS("getuid" HAVE_GETUID)
+CHECK_FUNCTION_EXISTS("iconv" HAVE_ICONV)
+CHECK_FUNCTION_EXISTS("iswblank" HAVE_ISWBLANK)
+CHECK_FUNCTION_EXISTS("iswcntrl" HAVE_ISWCNTRL)
+CHECK_FUNCTION_EXISTS("lstat" HAVE_LSTAT)
+CHECK_FUNCTION_EXISTS("mbrtowc" HAVE_MBRTOWC)
+CHECK_FUNCTION_EXISTS("mbsinit" HAVE_MBSINIT)
+CHECK_FUNCTION_EXISTS("mbslen" HAVE_MBSLEN)
+CHECK_FUNCTION_EXISTS("memchr" HAVE_MEMCHR)
+CHECK_FUNCTION_EXISTS("memmove" HAVE_MEMMOVE)
+CHECK_FUNCTION_EXISTS("mempcpy" HAVE_MEMPCPY)
+CHECK_FUNCTION_EXISTS("mmap" HAVE_MMAP)
+CHECK_FUNCTION_EXISTS("mprotect" HAVE_MPROTECT)
+CHECK_FUNCTION_EXISTS("munmap" HAVE_MUNMAP)
+CHECK_FUNCTION_EXISTS("newlocale" HAVE_NEWLOCALE)
+CHECK_FUNCTION_EXISTS("pathconf" HAVE_PATHCONF)
+CHECK_FUNCTION_EXISTS("putenv" HAVE_PUTENV)
+CHECK_FUNCTION_EXISTS("readlink" HAVE_READLINK)
+CHECK_FUNCTION_EXISTS("realpath" HAVE_REALPATH)
+CHECK_FUNCTION_EXISTS("setenv" HAVE_SETENV)
+CHECK_FUNCTION_EXISTS("setlocale" HAVE_SETLOCALE)
+CHECK_FUNCTION_EXISTS("snprintf" HAVE_SNPRINTF)
+CHECK_FUNCTION_EXISTS("stpcpy" HAVE_STPCPY)
+CHECK_FUNCTION_EXISTS("strcasecmp" HAVE_STRCASECMP)
+CHECK_FUNCTION_EXISTS("strdup" HAVE_STRDUP)
+CHECK_FUNCTION_EXISTS("strerror_r" HAVE_STRERROR_R)
+CHECK_FUNCTION_EXISTS("strnlen" HAVE_STRNLEN)
+CHECK_FUNCTION_EXISTS("strtol" HAVE_STRTOL)
+CHECK_FUNCTION_EXISTS("strtoul" HAVE_STRTOUL)
+CHECK_FUNCTION_EXISTS("tsearch" HAVE_TSEARCH)
+CHECK_FUNCTION_EXISTS("uselocale" HAVE_USELOCALE)
+CHECK_FUNCTION_EXISTS("wcrtomb" HAVE_WCRTOMB)
+CHECK_FUNCTION_EXISTS("wcslen" HAVE_WCSLEN)
+CHECK_FUNCTION_EXISTS("wcsnlen" HAVE_WCSNLEN)
+CHECK_FUNCTION_EXISTS("wcwidth" HAVE_WCWIDTH)
+CHECK_FUNCTION_EXISTS("_NSGetExecutablePath" HAVE__NSGETEXECUTABLEPATH)
+CHECK_FUNCTION_EXISTS("__fsetlocking" HAVE___FSETLOCKING)
+
+CHECK_FUNCTION_EXISTS("clearerr_unlocked" HAVE_DECL_CLEARERR_UNLOCKED)
+CHECK_FUNCTION_EXISTS("feof_unlocked" HAVE_DECL_FEOF_UNLOCKED)
+CHECK_FUNCTION_EXISTS("ferror_unlocked" HAVE_DECL_FERROR_UNLOCKED)
+CHECK_FUNCTION_EXISTS("fflush_unlocked" HAVE_DECL_FFLUSH_UNLOCKED)
+CHECK_FUNCTION_EXISTS("fgets_unlocked" HAVE_DECL_FGETS_UNLOCKED)
+CHECK_FUNCTION_EXISTS("fputc_unlocked" HAVE_DECL_FPUTC_UNLOCKED)
+CHECK_FUNCTION_EXISTS("fputs_unlocked" HAVE_DECL_FPUTS_UNLOCKED)
+CHECK_FUNCTION_EXISTS("fread_unlocked" HAVE_DECL_FREAD_UNLOCKED)
+CHECK_FUNCTION_EXISTS("fwrite_unlocked" HAVE_DECL_FWRITE_UNLOCKED)
+CHECK_FUNCTION_EXISTS("getchar_unlocked" HAVE_DECL_GETCHAR_UNLOCKED)
+CHECK_FUNCTION_EXISTS("getc_unlocked" HAVE_DECL_GETC_UNLOCKED)
+CHECK_FUNCTION_EXISTS("getenv" HAVE_DECL_GETENV)
+CHECK_FUNCTION_EXISTS("getopt_clip" HAVE_DECL_GETOPT_CLIP)
+CHECK_FUNCTION_EXISTS("optreset" HAVE_DECL_OPTRESET)
+CHECK_FUNCTION_EXISTS("program_invocation_name" HAVE_DECL_PROGRAM_INVOCATION_NAME)
+CHECK_FUNCTION_EXISTS("program_invocation_short_name" HAVE_DECL_PROGRAM_INVOCATION_SHORT_NAME)
+CHECK_FUNCTION_EXISTS("putchar_unlocked" HAVE_DECL_PUTCHAR_UNLOCKED)
+CHECK_FUNCTION_EXISTS("putc_unlocked" HAVE_DECL_PUTC_UNLOCKED)
+CHECK_FUNCTION_EXISTS("strerror_r" HAVE_DECL_STRERROR_R)
+CHECK_FUNCTION_EXISTS("strnlen" HAVE_DECL_STRNLEN)
+CHECK_FUNCTION_EXISTS("wcwidth" HAVE_DECL_WCWIDTH)
+CHECK_FUNCTION_EXISTS("_snprintf" HAVE_DECL__SNPRINTF)
+CHECK_FUNCTION_EXISTS("_snwprintf" HAVE_DECL__SNWPRINTF)
+CHECK_FUNCTION_EXISTS("strerror" HAVE_DECL_STRERROR)
+
+CHECK_TYPE_SIZE("ptrdiff_t" BITSIZEOF_PTRDIFF_T)
+CHECK_TYPE_SIZE("sig_atomic_t" BITSIZEOF_SIG_ATOMIC_T)
+CHECK_TYPE_SIZE("size_t" BITSIZEOF_SIZE_T)
+CHECK_TYPE_SIZE("wchar_t" BITSIZEOF_WCHAR_T)
+CHECK_TYPE_SIZE("wint_t" BITSIZEOF_WINT_T)
+
+CHECK_TYPE_SIZE("intmax_t" INTMAX_T)
+
+CHECK_TYPE_SIZE("uintmax_t" UINTMAX_T)
+if(HAVE_UINTMAX_T)
+set(HAVE_STDINT_H_WITH_UINTMAX true)
+endif(HAVE_UINTMAX_T)
+
+if(ICONV_SECOND_ARGUMENT_IS_CONST)
+    set(HAVE_ICONV_CONST 1)
+endif(ICONV_SECOND_ARGUMENT_IS_CONST)
+
+if(NOT HAVE_UINTMAX_T)
+    set(uintmax_t "unsigned __int64")
+endif(NOT HAVE_UINTMAX_T)
+if(NOT HAVE_INTMAX_T)
+    set(intmax_t "__int64")
+endif(NOT HAVE_INTMAX_T)
+
+if(WINCE)
+    set(INTDIV0_RAISES_SIGFPE 1)
+endif(WINCE)
+
+if(WIN32)
+    set(FILE_SYSTEM_ACCEPTS_DRIVE_LETTER_PREFIX 1)
+    set(FILE_SYSTEM_BACKSLASH_IS_FILE_NAME_SEPARATOR 1)
+else(WIN32)
+    set(FILE_SYSTEM_BACKSLASH_IS_FILE_NAME_SEPARATOR 0)
+endif(WIN32)
+
+configure_file(${CMAKE_CURRENT_SOURCE_DIR}/config.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config.h)
+
+add_definitions(-DHAVE_CONFIG_H -DLIBDIR)
\ Kein Zeilenumbruch am Dateiende.
diff -Nru -x '*~' gettext-0.18.orig/gettext-runtime/intl/CMakeLists.txt gettext-0.18/gettext-runtime/intl/CMakeLists.txt
--- gettext-0.18.orig/gettext-runtime/intl/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ gettext-0.18/gettext-runtime/intl/CMakeLists.txt	2013-03-19 08:59:57.015780700 +0100
@@ -0,0 +1,70 @@
+cmake_minimum_required(VERSION 2.6)
+set(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS ON)
+
+project(intl)
+
+set(HAVE_NEWLOCALE 0)
+set(HAVE_POSIX_PRINTF 0)
+set(HAVE_SNPRINTF 0)
+set(HAVE_ASPRINTF 0)
+set(HAVE_WPRINTF 0)
+
+configure_file(libgnuintl.h.in libgnuintl.h)
+
+include_directories(${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR})
+
+set(INTL_SRCS
+  bindtextdom.c
+  dcgettext.c
+  dgettext.c
+  gettext.c
+  finddomain.c
+  hash-string.c
+  loadmsgcat.c
+  localealias.c
+  textdomain.c
+  l10nflist.c
+  explodename.c
+  dcigettext.c
+  dcngettext.c
+  dngettext.c
+  ngettext.c
+  plural-exp.c
+  localcharset.c
+  threadlib.c
+  lock.c
+  relocatable.c
+  langprefs.c
+  localename.c
+  log.c
+  printf.c
+  setlocale.c
+  version.c
+  osdep.c
+  intl-compat.c
+  libintl.rc
+  plural.c
+  intl.def
+)
+
+add_definitions(-DLOCALE_ALIAS_PATH="")
+add_definitions(-DLOCALEDIR="")
+add_definitions(-DIN_LIBINTL)
+#add_definitions(-DBUILDING_DLL)
+#add_definitions(-DHAVE_VISIBILITY)
+
+add_library(intl ${LIBRARY_TYPE} ${INTL_SRCS})
+target_link_libraries(intl ${ICONV_LIBRARIES})
+if(MSVC)
+set_target_properties(intl PROPERTIES OUTPUT_NAME "libintl")
+endif(MSVC)
+
+if(WINCE)
+    target_link_libraries(intl ${WCECOMPAT_LIBRARIES})
+endif(WINCE)
+
+install(TARGETS intl RUNTIME DESTINATION bin
+                        LIBRARY DESTINATION lib
+                        ARCHIVE DESTINATION lib)
+
+install(FILES ${CMAKE_CURRENT_BINARY_DIR}/libgnuintl.h DESTINATION include RENAME libintl.h)
diff -Nru -x '*~' gettext-0.18.orig/gettext-runtime/intl/dcigettext.c gettext-0.18/gettext-runtime/intl/dcigettext.c
--- gettext-0.18.orig/gettext-runtime/intl/dcigettext.c	2009-12-26 14:42:37.000000000 +0100
+++ gettext-0.18/gettext-runtime/intl/dcigettext.c	2013-03-19 08:59:57.017780800 +0100
@@ -140,8 +140,12 @@
 # define tfind __tfind
 #else
 # if !defined HAVE_GETCWD
+#  ifndef _WIN32_WCE
 char *getwd ();
-#  define getcwd(buf, max) getwd (buf)
+#   define getcwd(buf, max) getwd (buf)
+#  else
+#    define getcwd _getcwd
+#  endif
 # else
 #  if VMS
 #   define getcwd(buf, max) (getcwd) (buf, max, 0)
diff -Nru -x '*~' gettext-0.18.orig/gettext-runtime/intl/intl.def gettext-0.18/gettext-runtime/intl/intl.def
--- gettext-0.18.orig/gettext-runtime/intl/intl.def	1970-01-01 01:00:00.000000000 +0100
+++ gettext-0.18/gettext-runtime/intl/intl.def	2013-03-19 08:59:57.019781000 +0100
@@ -0,0 +1,52 @@
+LIBRARY libintl.DLL
+EXPORTS
+;_imp___ctype_ptr
+_nl_expand_alias
+_nl_explode_name
+_nl_find_domain
+_nl_find_msg
+_nl_language_preferences_default
+_nl_load_domain
+_nl_locale_name
+_nl_locale_name_default
+_nl_locale_name_environ
+_nl_locale_name_posix
+_nl_locale_name_thread_unsafe
+_nl_log_untranslated
+_nl_make_l10nflist
+_nl_msg_cat_cntr
+_nl_normalize_codeset
+bind_textdomain_codeset
+bindtextdomain
+dcgettext
+dcngettext
+dgettext
+dngettext
+gettext
+gl_locale_name_thread
+libintl_bind_textdomain_codeset
+libintl_bindtextdomain
+libintl_dcgettext
+libintl_dcigettext
+libintl_dcngettext
+libintl_dgettext
+libintl_dngettext
+libintl_gettext
+libintl_gettext_extract_plural
+libintl_gettext_free_exp
+libintl_gettext_germanic_plural
+libintl_gettextparse
+libintl_fprintf
+libintl_hash_string
+libintl_ngettext
+libintl_nl_current_default_domain
+libintl_nl_default_default_domain
+libintl_nl_default_dirname
+libintl_nl_domain_bindings
+;libintl_relocate
+;libintl_set_relocation_prefix
+libintl_setlocale
+libintl_sprintf
+libintl_textdomain
+libintl_version
+locale_charset
diff -Nru -x '*~' gettext-0.18.orig/gettext-runtime/intl/langprefs.c gettext-0.18/gettext-runtime/intl/langprefs.c
--- gettext-0.18.orig/gettext-runtime/intl/langprefs.c	2009-12-12 16:08:01.000000000 +0100
+++ gettext-0.18/gettext-runtime/intl/langprefs.c	2013-03-19 08:59:57.020781000 +0100
@@ -53,6 +53,8 @@
 extern const char *_nl_locale_name_from_win32_LANGID (LANGID langid);
 extern const char *_nl_locale_name_from_win32_LCID (LCID lcid);
 
+#ifndef _WIN32_WCE
+
 /* Get the preferences list through the MUI APIs. This works on Windows Vista
    and newer.  */
 static const char *
@@ -205,6 +207,8 @@
   return NULL;
 }
 
+
+
 /* Get the system's preference.  This can be used as a fallback.  */
 static BOOL CALLBACK
 ret_first_language (HMODULE h, LPCSTR type, LPCSTR name, WORD lang, LONG_PTR param)
@@ -222,7 +226,7 @@
                          ret_first_language, (LONG_PTR)&languages);
   return languages;
 }
-
+#endif
 #endif
 
 /* Determine the user's language preferences, as a colon separated list of
@@ -324,6 +328,7 @@
     static const char *cached_languages;
     static int cache_initialized;
 
+#ifndef _WIN32_WCE
     /* Activate the new code only when the GETTEXT_MUI environment variable is
        set, for the time being, since the new code is not well tested.  */
     if (!cache_initialized && getenv ("GETTEXT_MUI") != NULL)
@@ -346,10 +351,21 @@
         cached_languages = languages;
         cache_initialized = 1;
       }
+#else
+    if (!cache_initialized)
+      {
+        LCID lcid;
+        
+        /* Use native Win32 API locale ID.  */
+        lcid = GetSystemDefaultLCID ();
+        
+        cached_languages = _nl_locale_name_from_win32_LCID(lcid);
+        cache_initialized = 1;
+      }
+#endif
     if (cached_languages != NULL)
       return cached_languages;
   }
 #endif
-
   return NULL;
 }
diff -Nru -x '*~' gettext-0.18.orig/gettext-runtime/intl/libgnuintl.h.in gettext-0.18/gettext-runtime/intl/libgnuintl.h.in
--- gettext-0.18.orig/gettext-runtime/intl/libgnuintl.h.in	2010-05-09 20:54:29.000000000 +0200
+++ gettext-0.18/gettext-runtime/intl/libgnuintl.h.in	2013-03-19 08:59:57.023781200 +0100
@@ -19,6 +19,10 @@
 #ifndef _LIBINTL_H
 #define _LIBINTL_H 1
 
+#ifdef _MSC_VER
+#define inline __inline
+#endif
+
 #include <locale.h>
 #if (defined __APPLE__ && defined __MACH__) && @HAVE_NEWLOCALE@
 # include <xlocale.h>
diff -Nru -x '*~' gettext-0.18.orig/gettext-runtime/intl/libintl.rc gettext-0.18/gettext-runtime/intl/libintl.rc
--- gettext-0.18.orig/gettext-runtime/intl/libintl.rc	2010-05-09 20:54:29.000000000 +0200
+++ gettext-0.18/gettext-runtime/intl/libintl.rc	2013-03-19 08:59:57.024781200 +0100
@@ -22,13 +22,13 @@
             VALUE "Comments", "This library is free software; you can redistribute it and/or modify it under the terms of the GNU Library General Public License. You should have received a copy of the GNU Library General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA\0"
             VALUE "CompanyName", "Free Software Foundation\0"
             VALUE "FileDescription", "LGPLed libintl for Windows NT/2000/XP/Vista/7 and Windows 95/98/ME\0"
-            VALUE "FileVersion", PACKAGE_VERSION_STRING "\0"
+            VALUE "FileVersion", "0.18\0"
             VALUE "InternalName", "intl.dll\0"
             VALUE "LegalCopyright", "Copyright (C) 1995-2010\0"
             VALUE "LegalTrademarks", "\0"
             VALUE "OriginalFilename", "intl.dll\0"
             VALUE "ProductName", "libintl: accessing NLS message catalogs\0"
-            VALUE "ProductVersion", PACKAGE_VERSION_STRING "\0"
+            VALUE "ProductVersion", "0.18\0"
         END
     END
     BLOCK "VarFileInfo"
diff -Nru -x '*~' gettext-0.18.orig/gettext-runtime/intl/loadmsgcat.c gettext-0.18/gettext-runtime/intl/loadmsgcat.c
--- gettext-0.18.orig/gettext-runtime/intl/loadmsgcat.c	2009-06-28 21:44:04.000000000 +0200
+++ gettext-0.18/gettext-runtime/intl/loadmsgcat.c	2013-03-19 08:59:57.027781400 +0100
@@ -33,6 +33,11 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 
+#ifdef _WIN32_WCE
+# include <io.h>
+#define open(a,b) _open(a,b,0)
+#endif
+
 #ifdef __GNUC__
 # undef  alloca
 # define alloca __builtin_alloca
@@ -40,7 +45,9 @@
 #else
 # ifdef _MSC_VER
 #  include <malloc.h>
+#  undef alloca
 #  define alloca _alloca
+#  define HAVE_ALLOCA
 # else
 #  if defined HAVE_ALLOCA_H || defined _LIBC
 #   include <alloca.h>
@@ -499,7 +506,6 @@
 # define O_BINARY 0
 #endif
 
-
 /* We need a sign, whether a new catalog was loaded, which can be associated
    with all translations.  This is important if the translations are
    cached by one of GCC's features.  */
@@ -782,7 +788,7 @@
 {
   __libc_lock_define_initialized_recursive (static, lock)
   int fd = -1;
-  size_t size;
+  size_t _size;
 #ifdef _LIBC
   struct stat64 st;
 #else
@@ -836,15 +842,15 @@
 #else
       __builtin_expect (fstat (fd, &st) != 0, 0)
 #endif
-      || __builtin_expect ((size = (size_t) st.st_size) != st.st_size, 0)
-      || __builtin_expect (size < sizeof (struct mo_file_header), 0))
+      || __builtin_expect ((_size = (size_t) st.st_size) != st.st_size, 0)
+      || __builtin_expect (_size < sizeof (struct mo_file_header), 0))
     /* Something went wrong.  */
     goto out;
 
 #ifdef HAVE_MMAP
   /* Now we are ready to load the file.  If mmap() is available we try
      this first.  If not available or it failed we try to load it.  */
-  data = (struct mo_file_header *) mmap (NULL, size, PROT_READ,
+  data = (struct mo_file_header *) mmap (NULL, _size, PROT_READ,
 					 MAP_PRIVATE, fd, 0);
 
   if (__builtin_expect (data != (struct mo_file_header *) -1, 1))
@@ -863,11 +869,11 @@
       size_t to_read;
       char *read_ptr;
 
-      data = (struct mo_file_header *) malloc (size);
+      data = (struct mo_file_header *) malloc (_size);
       if (data == NULL)
 	goto out;
 
-      to_read = size;
+      to_read = _size;
       read_ptr = (char *) data;
       do
 	{
@@ -897,7 +903,7 @@
       /* The magic number is wrong: not a message catalog file.  */
 #ifdef HAVE_MMAP
       if (use_mmap)
-	munmap ((caddr_t) data, size);
+	munmap ((caddr_t) data, _size);
       else
 #endif
 	free (data);
@@ -911,7 +917,7 @@
 
   domain->data = (char *) data;
   domain->use_mmap = use_mmap;
-  domain->mmap_size = size;
+  domain->mmap_size = _size;
   domain->must_swap = data->magic != _MAGIC;
   domain->malloced = NULL;
 
diff -Nru -x '*~' gettext-0.18.orig/gettext-runtime/intl/localename.c gettext-0.18/gettext-runtime/intl/localename.c
--- gettext-0.18.orig/gettext-runtime/intl/localename.c	2010-05-09 04:27:13.000000000 +0200
+++ gettext-0.18/gettext-runtime/intl/localename.c	2013-03-19 08:59:57.030781600 +0100
@@ -1128,6 +1128,10 @@
 # endif
 #endif
 
+#ifdef _WIN32_WCE
+#define GetThreadLocale GetUserDefaultLCID
+#endif
+
 
 #if HAVE_CFLOCALECOPYCURRENT || HAVE_CFPREFERENCESCOPYAPPVALUE
 /* MacOS X 10.2 or newer */
@@ -1448,6 +1452,7 @@
 const char *
 gl_locale_name_from_win32_LANGID (LANGID langid)
 {
+#ifndef _WIN32_WCE
   /* Activate the new code only when the GETTEXT_MUI environment variable is
      set, for the time being, since the new code is not well tested.  */
   if (getenv ("GETTEXT_MUI") != NULL)
@@ -1465,6 +1470,7 @@
           return namebuf;
         }
     }
+#endif
   /* Internet Explorer has an LCID to RFC3066 name mapping stored in
      HKEY_CLASSES_ROOT\Mime\Database\Rfc1766.  But we better don't use that
      since IE's i18n subsystem is known to be inconsistent with the Win32 base
diff -Nru -x '*~' gettext-0.18.orig/gettext-runtime/intl/os2compat.c gettext-0.18/gettext-runtime/intl/os2compat.c
--- gettext-0.18.orig/gettext-runtime/intl/os2compat.c	2009-06-28 21:44:04.000000000 +0200
+++ gettext-0.18/gettext-runtime/intl/os2compat.c	2013-03-19 08:59:57.032781700 +0100
@@ -23,7 +23,9 @@
 
 #include <stdlib.h>
 #include <string.h>
+#ifdef HAVE_SYS_PARAM_H
 #include <sys/param.h>
+#endif
 
 /* A version of getenv() that works from DLLs */
 extern unsigned long DosScanEnv (const unsigned char *pszName, unsigned char **ppszValue);
diff -Nru -x '*~' gettext-0.18.orig/gettext-runtime/intl/printf-parse.c gettext-0.18/gettext-runtime/intl/printf-parse.c
--- gettext-0.18.orig/gettext-runtime/intl/printf-parse.c	2009-12-12 16:08:01.000000000 +0100
+++ gettext-0.18/gettext-runtime/intl/printf-parse.c	2013-03-19 08:59:57.034781800 +0100
@@ -75,6 +75,11 @@
 # include "c-ctype.h"
 #endif
 
+#if defined(_WIN32_WCE) && !defined(_PTRDIFF_T_DEFINED)
+  typedef int ptrdiff_t;
+# define _PTRDIFF_T_DEFINED
+#endif
+
 #ifdef STATIC
 STATIC
 #endif
diff -Nru -x '*~' gettext-0.18.orig/gettext-runtime/intl/setlocale.c gettext-0.18/gettext-runtime/intl/setlocale.c
--- gettext-0.18.orig/gettext-runtime/intl/setlocale.c	2009-12-26 04:15:07.000000000 +0100
+++ gettext-0.18/gettext-runtime/intl/setlocale.c	2013-03-19 08:59:57.037782000 +0100
@@ -16,6 +16,7 @@
    License along with this program; if not, write to the Free Software
    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,
    USA.  */
+   
 
 #ifdef HAVE_CONFIG_H
 # include <config.h>
@@ -46,6 +47,9 @@
 
 #if (defined __APPLE__ && defined __MACH__) || defined _WIN32 || defined __WIN32__ || defined __CYGWIN__
 
+/* FIXME: In Windwos CE the function setlocale is not defined */
+# ifndef _WIN32_WCE
+
 # undef setlocale
 # undef newlocale
 
@@ -816,10 +820,14 @@
 #  define setlocale_single setlocale_unixlike
 # endif
 
+# endif
+
 DLL_EXPORTED
 char *
 libintl_setlocale (int category, const char *locale)
 {
+/* FIXME: In Windwos CE we dont need setlocale */
+#ifndef _WIN32_WCE
   if (locale != NULL && locale[0] == '\0')
     {
       /* A request to the set the current locale to the default locale.  */
@@ -899,6 +907,8 @@
     }
   else
     return setlocale_single (category, locale);
+#endif    
+    return NULL;
 }
 
 # if HAVE_NEWLOCALE
diff -Nru -x '*~' gettext-0.18.orig/gettext-runtime/intl/vasnprintf.c gettext-0.18/gettext-runtime/intl/vasnprintf.c
--- gettext-0.18.orig/gettext-runtime/intl/vasnprintf.c	2010-05-09 12:54:20.000000000 +0200
+++ gettext-0.18/gettext-runtime/intl/vasnprintf.c	2013-03-19 08:59:57.042782300 +0100
@@ -86,6 +86,10 @@
 # endif
 #endif
 
+#ifdef _WIN32_WCE
+#include <wchar.h>
+#endif
+
 /* Checked size_t computations.  */
 #include "xsize.h"
 
diff -Nru -x '*~' gettext-0.18.orig/gettext-runtime/intl/xsize.h gettext-0.18/gettext-runtime/intl/xsize.h
--- gettext-0.18.orig/gettext-runtime/intl/xsize.h	2009-06-28 21:44:04.000000000 +0200
+++ gettext-0.18/gettext-runtime/intl/xsize.h	2013-03-19 08:59:57.044782400 +0100
@@ -25,6 +25,9 @@
 
 /* Get SIZE_MAX.  */
 #include <limits.h>
+#ifdef _WIN32_WCE
+#define SIZE_MAX  _UI32_MAX
+#endif
 #if HAVE_STDINT_H
 # include <stdint.h>
 #endif
diff -Nru -x '*~' gettext-0.18.orig/gettext-runtime/src/CMakeLists.txt gettext-0.18/gettext-runtime/src/CMakeLists.txt
--- gettext-0.18.orig/gettext-runtime/src/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ gettext-0.18/gettext-runtime/src/CMakeLists.txt	2013-03-19 08:59:57.046782500 +0100
@@ -0,0 +1,22 @@
+cmake_minimum_required(VERSION 2.6)
+set(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS ON)
+
+project(tools)
+
+set(GETTEXT_SRCS
+    gettext.c
+)
+
+set(NGETTEXT_SRCS
+    ngettext.c
+)
+
+set(ENVSUBST_SRCS
+    envsubst.c
+)
+
+add_executable(gettext ${GETTEXT_SRCS})
+
+add_executable(ngettext ${NGETTEXT_SRCS})
+
+add_executable(envsubst ${ENVSUBST_SRCS})
