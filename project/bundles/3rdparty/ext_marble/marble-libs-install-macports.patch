diff --git a/CMakeLists.txt b/CMakeLists.txt
index e5cee1b4a..bd36b899e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -192,7 +192,7 @@ elseif(APPLE)
       # for Mac OS X, everything is put inside an application bundle
       SET (CMAKE_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX}/)
       # path for library references
-      SET (CMAKE_INSTALL_NAME_DIR @executable_path/lib)
+      SET (CMAKE_INSTALL_NAME_DIR ${CMAKE_INSTALL_PREFIX}/lib)
       # install the Info.plist file
       install(FILES src/mac/Info.plist DESTINATION ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents)
       #SET (lib_dir ${CMAKE_INSTALL_PREFIX}/Marble.app/Contents/MacOS/lib)
diff --git a/src/lib/astro/CMakeLists.txt b/src/lib/astro/CMakeLists.txt
index 3dbe45571..2a3d96a4c 100644
--- a/src/lib/astro/CMakeLists.txt
+++ b/src/lib/astro/CMakeLists.txt
@@ -62,7 +62,7 @@ endif()
 
 if (WIN32 OR APPLE)
     # TODO: find how to install & deploy library, headers and config files as bundle for development
-    return()
+#    return()
 endif()
 
 
@@ -80,30 +80,30 @@ endif()
 
 ########### CMake Config files ###############
 
-include(CMakePackageConfigHelpers)
-
-set(ASTRO_CMAKECONFIGNAME Astro)
-set(ASTRO_INSTALL_CMAKECONFIGDIR ${CMAKE_INSTALL_LIBDIR}/cmake/${ASTRO_CMAKECONFIGNAME})
-
-configure_package_config_file(AstroConfig.cmake.in
-    ${CMAKE_CURRENT_BINARY_DIR}/${ASTRO_CMAKECONFIGNAME}Config.cmake
-    INSTALL_DESTINATION ${ASTRO_INSTALL_CMAKECONFIGDIR}
-)
-
-write_basic_package_version_file(${CMAKE_CURRENT_BINARY_DIR}/${ASTRO_CMAKECONFIGNAME}ConfigVersion.cmake
-    VERSION ${ASTRO_LIB_VERSION}
-    COMPATIBILITY SameMajorVersion
-)
-
-install(FILES
-    ${CMAKE_CURRENT_BINARY_DIR}/${ASTRO_CMAKECONFIGNAME}Config.cmake
-    ${CMAKE_CURRENT_BINARY_DIR}/${ASTRO_CMAKECONFIGNAME}ConfigVersion.cmake
-
-    DESTINATION ${ASTRO_INSTALL_CMAKECONFIGDIR}
-)
-
-install(
-    EXPORT AstroTargets
-    FILE ${ASTRO_CMAKECONFIGNAME}Targets.cmake
-    DESTINATION ${ASTRO_INSTALL_CMAKECONFIGDIR}
-)
+#include(CMakePackageConfigHelpers)
+#
+#set(ASTRO_CMAKECONFIGNAME Astro)
+#set(ASTRO_INSTALL_CMAKECONFIGDIR ${CMAKE_INSTALL_LIBDIR}/cmake/${ASTRO_CMAKECONFIGNAME})
+#
+#configure_package_config_file(AstroConfig.cmake.in
+#    ${CMAKE_CURRENT_BINARY_DIR}/${ASTRO_CMAKECONFIGNAME}Config.cmake
+#    INSTALL_DESTINATION ${ASTRO_INSTALL_CMAKECONFIGDIR}
+#)
+#
+#write_basic_package_version_file(${CMAKE_CURRENT_BINARY_DIR}/${ASTRO_CMAKECONFIGNAME}ConfigVersion.cmake
+#    VERSION ${ASTRO_LIB_VERSION}
+#    COMPATIBILITY SameMajorVersion
+#)
+#
+#install(FILES
+#    ${CMAKE_CURRENT_BINARY_DIR}/${ASTRO_CMAKECONFIGNAME}Config.cmake
+#    ${CMAKE_CURRENT_BINARY_DIR}/${ASTRO_CMAKECONFIGNAME}ConfigVersion.cmake
+#
+#    DESTINATION ${ASTRO_INSTALL_CMAKECONFIGDIR}
+#)
+#
+#install(
+#    EXPORT AstroTargets
+#    FILE ${ASTRO_CMAKECONFIGNAME}Targets.cmake
+#    DESTINATION ${ASTRO_INSTALL_CMAKECONFIGDIR}
+#)
diff --git a/src/lib/marble/CMakeLists.txt b/src/lib/marble/CMakeLists.txt
index 6403ce45b..be949606b 100644
--- a/src/lib/marble/CMakeLists.txt
+++ b/src/lib/marble/CMakeLists.txt
@@ -454,7 +454,7 @@ endif()
 
 if (WIN32 OR APPLE)
     # TODO: find how to install & deploy library, headers and config files as bundle for development
-    return()
+#    return()
 endif()
 
 if (MARBLE_NO_WEBKITWIDGETS)
@@ -628,33 +628,33 @@ install( FILES
 
 ########### CMake Config files ###############
 
-include(CMakePackageConfigHelpers)
-
-set(MARBLE_CMAKECONFIGNAME Marble)
-set(MARBLE_INSTALL_CMAKECONFIGDIR ${CMAKE_INSTALL_LIBDIR}/cmake/${MARBLE_CMAKECONFIGNAME})
-
-configure_package_config_file(MarbleConfig.cmake.in
-    ${CMAKE_CURRENT_BINARY_DIR}/${MARBLE_CMAKECONFIGNAME}Config.cmake
-    INSTALL_DESTINATION ${MARBLE_INSTALL_CMAKECONFIGDIR}
-)
-
-write_basic_package_version_file(${CMAKE_CURRENT_BINARY_DIR}/${MARBLE_CMAKECONFIGNAME}ConfigVersion.cmake
-    VERSION ${MARBLE_LIB_VERSION}
-    COMPATIBILITY SameMajorVersion
-)
-
-install(FILES
-    ${CMAKE_CURRENT_BINARY_DIR}/${MARBLE_CMAKECONFIGNAME}Config.cmake
-    ${CMAKE_CURRENT_BINARY_DIR}/${MARBLE_CMAKECONFIGNAME}ConfigVersion.cmake
-
-    DESTINATION ${MARBLE_INSTALL_CMAKECONFIGDIR}
-)
-
-install(
-    EXPORT MarbleTargets
-    FILE ${MARBLE_CMAKECONFIGNAME}Targets.cmake
-    DESTINATION ${MARBLE_INSTALL_CMAKECONFIGDIR}
-)
+#include(CMakePackageConfigHelpers)
+#
+#set(MARBLE_CMAKECONFIGNAME Marble)
+#set(MARBLE_INSTALL_CMAKECONFIGDIR ${CMAKE_INSTALL_LIBDIR}/cmake/${MARBLE_CMAKECONFIGNAME})
+#
+#configure_package_config_file(MarbleConfig.cmake.in
+#    ${CMAKE_CURRENT_BINARY_DIR}/${MARBLE_CMAKECONFIGNAME}Config.cmake
+#    INSTALL_DESTINATION ${MARBLE_INSTALL_CMAKECONFIGDIR}
+#)
+#
+#write_basic_package_version_file(${CMAKE_CURRENT_BINARY_DIR}/${MARBLE_CMAKECONFIGNAME}ConfigVersion.cmake
+#    VERSION ${MARBLE_LIB_VERSION}
+#    COMPATIBILITY SameMajorVersion
+#)
+#
+#install(FILES
+#    ${CMAKE_CURRENT_BINARY_DIR}/${MARBLE_CMAKECONFIGNAME}Config.cmake
+#    ${CMAKE_CURRENT_BINARY_DIR}/${MARBLE_CMAKECONFIGNAME}ConfigVersion.cmake
+#
+#    DESTINATION ${MARBLE_INSTALL_CMAKECONFIGDIR}
+#)
+#
+#install(
+#    EXPORT MarbleTargets
+#    FILE ${MARBLE_CMAKECONFIGNAME}Targets.cmake
+#    DESTINATION ${MARBLE_INSTALL_CMAKECONFIGDIR}
+#)
 
 
 ########### Qt Pri file ###############
